{
  "version": 3,
  "sources": ["<stdin>", "../app/entry.server.tsx", "../app/root.tsx", "../src/utils/theme.ts", "../app/routes/course.$courseId.$unitId.$chapterId.tsx", "../app/models/course.server.ts", "../src/utils/firebase.ts", "../src/components/Question.tsx", "../src/components/CourseSidebar.tsx", "../app/routes/course.$courseId.$unitId.tsx", "../app/routes/course.$courseId.tsx", "../app/routes/create.$courseId.tsx", "../src/components/CreateCourseChapter.tsx", "../app/routes/contact.tsx", "../app/routes/gallery.tsx", "../src/components/GalleryResult.tsx", "../app/routes/index.tsx", "../src/components/Unit.tsx", "server-assets-manifest:@remix-run/dev/assets-manifest", "server-entry-module:@remix-run/dev/server-build"],
  "sourcesContent": ["export * from \"@remix-run/dev/server-build\";", "import { PassThrough } from \"stream\";\n\nimport createEmotionCache from \"@emotion/cache\";\nimport { CacheProvider as EmotionCacheProvider } from \"@emotion/react\";\nimport createEmotionServer from \"@emotion/server/create-instance\";\nimport type { AppLoadContext, EntryContext } from \"@remix-run/node\";\nimport { Response } from \"@remix-run/node\";\nimport { RemixServer } from \"@remix-run/react\";\nimport isbot from \"isbot\";\nimport { renderToPipeableStream } from \"react-dom/server\";\n\nconst ABORT_DELAY = 5000;\n\nconst handleRequest = (\n  request: Request,\n  responseStatusCode: number,\n  responseHeaders: Headers,\n  remixContext: EntryContext,\n  loadContext: AppLoadContext\n) =>\n  isbot(request.headers.get(\"user-agent\"))\n    ? handleBotRequest(\n        request,\n        responseStatusCode,\n        responseHeaders,\n        remixContext\n      )\n    : handleBrowserRequest(\n        request,\n        responseStatusCode,\n        responseHeaders,\n        remixContext\n      );\nexport default handleRequest;\n\nconst handleBotRequest = (\n  request: Request,\n  responseStatusCode: number,\n  responseHeaders: Headers,\n  remixContext: EntryContext\n) =>\n  new Promise((resolve, reject) => {\n    let didError = false;\n    const emotionCache = createEmotionCache({ key: \"css\" });\n\n    const { pipe, abort } = renderToPipeableStream(\n      <EmotionCacheProvider value={emotionCache}>\n        <RemixServer context={remixContext} url={request.url} />\n      </EmotionCacheProvider>,\n      {\n        onAllReady: () => {\n          const reactBody = new PassThrough();\n          const emotionServer = createEmotionServer(emotionCache);\n\n          const bodyWithStyles = emotionServer.renderStylesToNodeStream();\n          reactBody.pipe(bodyWithStyles);\n\n          responseHeaders.set(\"Content-Type\", \"text/html\");\n\n          resolve(\n            new Response(bodyWithStyles, {\n              headers: responseHeaders,\n              status: didError ? 500 : responseStatusCode,\n            })\n          );\n\n          pipe(reactBody);\n        },\n        onShellError: (error: unknown) => {\n          reject(error);\n        },\n        onError: (error: unknown) => {\n          didError = true;\n\n          console.error(error);\n        },\n      }\n    );\n\n    setTimeout(abort, ABORT_DELAY);\n  });\n\nconst handleBrowserRequest = (\n  request: Request,\n  responseStatusCode: number,\n  responseHeaders: Headers,\n  remixContext: EntryContext\n) =>\n  new Promise((resolve, reject) => {\n    let didError = false;\n    const emotionCache = createEmotionCache({ key: \"css\" });\n\n    const { pipe, abort } = renderToPipeableStream(\n      <EmotionCacheProvider value={emotionCache}>\n        <RemixServer context={remixContext} url={request.url} />\n      </EmotionCacheProvider>,\n      {\n        onShellReady: () => {\n          const reactBody = new PassThrough();\n          const emotionServer = createEmotionServer(emotionCache);\n\n          const bodyWithStyles = emotionServer.renderStylesToNodeStream();\n          reactBody.pipe(bodyWithStyles);\n\n          responseHeaders.set(\"Content-Type\", \"text/html\");\n\n          resolve(\n            new Response(bodyWithStyles, {\n              headers: responseHeaders,\n              status: didError ? 500 : responseStatusCode,\n            })\n          );\n\n          pipe(reactBody);\n        },\n        onShellError: (error: unknown) => {\n          reject(error);\n        },\n        onError: (error: unknown) => {\n          didError = true;\n\n          console.error(error);\n        },\n      }\n    );\n\n    setTimeout(abort, ABORT_DELAY);\n  });\n", "import {\n\tChakraProvider,\n\tBox,\n\tHeading,\n\tText,\n\tFlex,\n\tLink,\n\tHStack,\n\tStackDivider,\n\tCenter,\n\tAlert,\n\tAlertIcon,\n\tAlertTitle,\n\tAlertDescription,\n} from \"@chakra-ui/react\";\nimport type { LinksFunction, MetaFunction } from \"@remix-run/node\";\nimport {\n\tLinks,\n\tLiveReload,\n\tMeta,\n\tOutlet,\n\tScripts,\n\tScrollRestoration,\n\tuseCatch,\n\tuseNavigation,\n} from \"@remix-run/react\";\nimport theme from \"../src/utils/theme\";\nimport { Link as RemixLink } from \"@remix-run/react\";\nimport NProgress from \"nprogress\";\nimport nProgressStyles from \"nprogress/nprogress.css\";\nimport { useEffect } from \"react\";\n\nexport const meta: MetaFunction = () => ({\n\tcharset: \"utf-8\",\n});\n\nexport let links: LinksFunction = () => {\n\treturn [{ rel: \"stylesheet\", href: nProgressStyles }];\n};\n\nfunction Document({\n\tchildren,\n\ttitle = \"Coursify | AI-Generated Courses\",\n}: {\n\tchildren: React.ReactNode;\n\ttitle?: string;\n}) {\n\treturn (\n\t\t<html lang=\"en\">\n\t\t\t<head>\n\t\t\t\t<Meta />\n\t\t\t\t<meta name=\"viewport\" content=\"width=device-width,initial-scale=1\" />\n\t\t\t\t<script\n\t\t\t\t\tasync\n\t\t\t\t\tsrc=\"https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-6458965765037147\"\n\t\t\t\t\tcrossOrigin=\"anonymous\"\n\t\t\t\t></script>\n\t\t\t\t<title>{title}</title>\n\t\t\t\t<Links />\n\t\t\t</head>\n\t\t\t<body>\n\t\t\t\t{children}\n\t\t\t\t<ScrollRestoration />\n\t\t\t\t<Scripts />\n\t\t\t\t<LiveReload />\n\t\t\t</body>\n\t\t</html>\n\t);\n}\n\nexport default function App() {\n\tconst transition = useNavigation();\n\t\n\tuseEffect(() => {\n\t\tif (transition.state !== \"idle\") {\n\t\t\tNProgress.start();\n\t\t} else {\n\t\t\tNProgress.done();\n\t\t}\n\t}, [transition.state]);\n\n\treturn (\n\t\t<Document>\n\t\t\t<ChakraProvider theme={theme}>\n\t\t\t\t<Box h=\"100vh\" overflow={\"scroll\"}>\n\t\t\t\t\t<Flex\n\t\t\t\t\t\tas=\"header\"\n\t\t\t\t\t\talign=\"center\"\n\t\t\t\t\t\tjustify=\"space-between\"\n\t\t\t\t\t\tbg=\"gray.800\"\n\t\t\t\t\t\tpx={4}\n\t\t\t\t\t\th=\"90px\"\n\t\t\t\t\t\tposition=\"sticky\"\n\t\t\t\t\t\ttop={0}\n\t\t\t\t\t\tzIndex={10}\n\t\t\t\t\t\tboxShadow={\"xl\"}\n\t\t\t\t\t>\n\t\t\t\t\t\t<Text\n\t\t\t\t\t\t\tdisplay={{ lg: \"flex\", base: \"none\" }}\n\t\t\t\t\t\t\tas={RemixLink}\n\t\t\t\t\t\t\tto=\"/\"\n\t\t\t\t\t\t\tfontSize=\"2xl\"\n\t\t\t\t\t\t\tfontWeight=\"black\"\n\t\t\t\t\t\t\tcolor=\"white\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tCoursify\n\t\t\t\t\t\t</Text>\n\t\t\t\t\t\t<HStack spacing={{ base: 1, md: 4 }}>\n\t\t\t\t\t\t\t<Link as={RemixLink} to=\"/\" mx={2} color=\"white\">\n\t\t\t\t\t\t\t\tCreate New Course\n\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t<Link as={RemixLink} to=\"/gallery\" mx={2} color=\"white\">\n\t\t\t\t\t\t\t\tGallery\n\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t<Link as={RemixLink} to=\"/contact\" mx={2} color=\"white\">\n\t\t\t\t\t\t\t\tContact\n\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t</HStack>\n\t\t\t\t\t</Flex>\n\t\t\t\t\t<Box h=\"calc(100vh - 90px)\">\n\t\t\t\t\t\t<Outlet />\n\t\t\t\t\t</Box>\n\t\t\t\t</Box>\n\t\t\t</ChakraProvider>\n\t\t</Document>\n\t);\n}\n\n// How ChakraProvider should be used on CatchBoundary\nexport function CatchBoundary() {\n\tconst caught = useCatch();\n\n\treturn (\n\t\t<Document title={`${caught.status} ${caught.statusText}`}>\n\t\t\t<ChakraProvider theme={theme}>\n\t\t\t\t<Box>\n\t\t\t\t\t<Heading as=\"h1\" bg=\"purple.600\">\n\t\t\t\t\t\t[CatchBoundary]: {caught.status} {caught.statusText}\n\t\t\t\t\t</Heading>\n\t\t\t\t</Box>\n\t\t\t</ChakraProvider>\n\t\t</Document>\n\t);\n}\n\n// How ChakraProvider should be used on ErrorBoundary\nexport function ErrorBoundary({ error }: { error: Error }) {\n\tconsole.log(\"root ErrorBoundary\");\n\tconsole.error(error);\n\treturn (\n\t\t<Document title=\"Error!\">\n\t\t\t<ChakraProvider theme={theme}>\n\t\t\t\t<Box h=\"100vh\" overflow={\"scroll\"}>\n\t\t\t\t\t<Flex\n\t\t\t\t\t\tas=\"header\"\n\t\t\t\t\t\talign=\"center\"\n\t\t\t\t\t\tjustify=\"space-between\"\n\t\t\t\t\t\tbg=\"gray.800\"\n\t\t\t\t\t\tpx={4}\n\t\t\t\t\t\th=\"90px\"\n\t\t\t\t\t\tposition=\"sticky\"\n\t\t\t\t\t\ttop={0}\n\t\t\t\t\t\tzIndex=\"sticky\"\n\t\t\t\t\t\tboxShadow={\"xl\"}\n\t\t\t\t\t>\n\t\t\t\t\t\t<Text\n\t\t\t\t\t\t\tdisplay={{ lg: \"flex\", base: \"none\" }}\n\t\t\t\t\t\t\tas={RemixLink}\n\t\t\t\t\t\t\tto=\"/\"\n\t\t\t\t\t\t\tfontSize=\"2xl\"\n\t\t\t\t\t\t\tfontWeight=\"black\"\n\t\t\t\t\t\t\tcolor=\"white\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tCoursify\n\t\t\t\t\t\t</Text>\n\t\t\t\t\t\t<HStack spacing={{ base: 2, md: 4 }}>\n\t\t\t\t\t\t\t<Link as={RemixLink} to=\"/\" mx={2} color=\"white\">\n\t\t\t\t\t\t\t\tCreate New Course\n\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t<Link as={RemixLink} to=\"/gallery\" mx={2} color=\"white\">\n\t\t\t\t\t\t\t\tCourse Gallery\n\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t</HStack>\n\t\t\t\t\t</Flex>\n\n\t\t\t\t\t<Center h=\"calc(100vh - 90px)\">\n\t\t\t\t\t\t<Alert\n\t\t\t\t\t\t\tborderRadius={\"lg\"}\n\t\t\t\t\t\t\tmaxW={\"sm\"}\n\t\t\t\t\t\t\tstatus=\"error\"\n\t\t\t\t\t\t\tvariant=\"subtle\"\n\t\t\t\t\t\t\tflexDirection=\"column\"\n\t\t\t\t\t\t\talignItems=\"center\"\n\t\t\t\t\t\t\tjustifyContent=\"center\"\n\t\t\t\t\t\t\ttextAlign=\"center\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<AlertIcon boxSize=\"40px\" mr={0} />\n\t\t\t\t\t\t\t<AlertTitle mt={4} mb={1} fontSize=\"xl\">\n\t\t\t\t\t\t\t\tUh oh! An error occurred!\n\t\t\t\t\t\t\t</AlertTitle>\n\t\t\t\t\t\t\t<AlertDescription maxWidth=\"sm\">\n\t\t\t\t\t\t\t\t<Text fontWeight={\"bold\"}>Please reload and try again.</Text> If\n\t\t\t\t\t\t\t\tthat doesn't work, check back later.\n\t\t\t\t\t\t\t</AlertDescription>\n\t\t\t\t\t\t</Alert>\n\t\t\t\t\t</Center>\n\t\t\t\t</Box>\n\t\t\t</ChakraProvider>\n\t\t</Document>\n\t);\n}\n", "import { extendTheme, type ThemeConfig } from \"@chakra-ui/react\";\n\nconst config: ThemeConfig = {\n\tinitialColorMode: \"dark\",\n\tuseSystemColorMode: false,\n};\n\nconst theme = extendTheme({ config });\n\nexport default theme;\n", "\"use client\";\nimport type { LoaderArgs } from \"@remix-run/node\";\nimport { json } from \"@remix-run/node\";\nimport { useLoaderData, Link, Form } from \"@remix-run/react\";\nimport { getCourse } from \"~/models/course.server\";\nimport {\n\tAlert,\n\tAlertIcon,\n\tAspectRatio,\n\tBox,\n\tButton,\n\tDivider,\n\tHeading,\n\tIcon,\n\tLinkBox,\n\tLinkOverlay,\n\tSpacer,\n\tStack,\n\tText,\n\tHStack,\n\tTextarea,\n\tAvatar,\n\tInput,\n} from \"@chakra-ui/react\";\nimport Question from \"../../src/components/Question\";\nimport { FaChevronLeft, FaChevronRight } from \"react-icons/fa6\";\nimport CourseSidebar from \"src/components/CourseSidebar\";\nimport { useEffect, useState } from \"react\";\nimport ReactDOM from \"react-dom/client\";\n// import { chat } from \"../globalChatVariable\";\nimport { chatBot } from \"../models/course.server\";\nimport type { ActionArgs } from \"@remix-run/node\"; // or cloudflare/deno\nimport { db } from \"../../src/utils/firebase\";\nimport { getDoc, doc, collection, getDocs, setDoc } from \"@firebase/firestore\";\n\nlet global_chat = { courseId: 0, examples: [], messages: [] };\n\nexport const loader = async ({ params }: LoaderArgs) => {\n\tconst data = await getCourse(params.courseId as string);\n\n\tif (data.error) {\n\t\tthrow new Response(null, {\n\t\t\tstatus: 404,\n\t\t\tstatusText: \"Not Found\",\n\t\t});\n\t} else {\n\t\tlet chat = (await getDoc(doc(db, \"chat\", \"MfmN5BhbPpaLzBuNjV9l\"))) || \"\";\n\t\t// useEffect(() => {\n\t\t// \tchat = JSON.parse(localStorage.getItem(\"chat\") || \"{}\");\n\t\t// });\n\t\treturn json({\n\t\t\tparams: params,\n\t\t\tdata: await getCourse(params.courseId as string),\n\t\t\tchat: chat.data(),\n\t\t});\n\t\t// return {\n\t\t// \tparams: params,\n\t\t// \tdata: await getCourse(params.courseId as string),\n\t\t// \tchat: chat,\n\t\t// };\n\t}\n};\n\nexport async function action({ request }: ActionArgs) {\n\tconst formData = await request.formData();\n\tconst formObject = Object.fromEntries(formData);\n\tlet prompt = formObject.message.toString();\n\tlet courseId = formObject.courseId.toString();\n\tlet chapterId = formObject.chapterId.toString();\n\tlet unitId = formObject.unitId.toString();\n\tconsole.log(\"courseID\", courseId);\n\tconst response = await chatBot(\n\t\tprompt,\n\t\tcourseId,\n\t\tunitId,\n\t\tchapterId,\n\t\tglobal_chat\n\t);\n\tglobal_chat = response;\n\t// localStorage.setItem(\"chat\", JSON.stringify(response));\n\t// useEffect(() => {\n\t// \tlocalStorage.setItem(\"chat\", JSON.stringify(response));\n\t// });\n\t// let chat_examples = await getDoc(doc(db, \"chat\", \"MfmN5BhbPpaLzBuNjV9l\"));\n\treturn true;\n}\n\nconst PostSlug: React.FC = () => {\n\tconst { params, data, chat } = useLoaderData<typeof loader>();\n\tconst chapterInfo = data.units[params.unitId].chapters[params.chapterId];\n\tconst [check, setCheck] = useState(false);\n\n\tuseEffect(() => {\n\t\tlocalStorage.setItem(\"chat\", JSON.stringify(global_chat));\n\t}, [global_chat]);\n\treturn (\n\t\t<Stack direction={\"row\"} h=\"100%\">\n\t\t\t<CourseSidebar data={data} params={params} />\n\t\t\t<Box overflowY={\"scroll\"} p={8} w=\"100%\">\n\t\t\t\t<Stack w=\"100%\" h=\"100%\">\n\t\t\t\t\t<Stack direction={{ base: \"column\", md: \"row\" }} spacing={8}>\n\t\t\t\t\t\t<Stack w=\"100%\">\n\t\t\t\t\t\t\t<Stack spacing={0}>\n\t\t\t\t\t\t\t\t<Box\n\t\t\t\t\t\t\t\t\tcolor=\"whiteAlpha.600\"\n\t\t\t\t\t\t\t\t\tfontWeight=\"semibold\"\n\t\t\t\t\t\t\t\t\tletterSpacing=\"wide\"\n\t\t\t\t\t\t\t\t\tfontSize=\"xs\"\n\t\t\t\t\t\t\t\t\ttextTransform=\"uppercase\"\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\tUnit {+params.unitId + 1} &bull; Chapter{\" \"}\n\t\t\t\t\t\t\t\t\t{+params.chapterId + 1}\n\t\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t\t\t<Heading> {chapterInfo.title}</Heading>\n\t\t\t\t\t\t\t</Stack>\n\n\t\t\t\t\t\t\t<AspectRatio\n\t\t\t\t\t\t\t\toverflow=\"clip\"\n\t\t\t\t\t\t\t\tborderRadius=\"md\"\n\t\t\t\t\t\t\t\tw=\"100%\"\n\t\t\t\t\t\t\t\tmaxH=\"sm\"\n\t\t\t\t\t\t\t\tratio={16 / 9}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<iframe\n\t\t\t\t\t\t\t\t\ttitle=\"chapter video\"\n\t\t\t\t\t\t\t\t\tsrc={`https://www.youtube.com/embed/${\n\t\t\t\t\t\t\t\t\t\tchapterInfo.video ? chapterInfo.video : chapterInfo.video_id\n\t\t\t\t\t\t\t\t\t}`}\n\t\t\t\t\t\t\t\t\tallowFullScreen\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</AspectRatio>\n\n\t\t\t\t\t\t\t<Heading size=\"lg\">Video Summary</Heading>\n\t\t\t\t\t\t\t<Text>\n\t\t\t\t\t\t\t\t{chapterInfo.summary\n\t\t\t\t\t\t\t\t\t? chapterInfo.summary\n\t\t\t\t\t\t\t\t\t: chapterInfo.video_summary}\n\t\t\t\t\t\t\t</Text>\n\t\t\t\t\t\t</Stack>\n\n\t\t\t\t\t\t<Stack w={{ base: \"100%\", md: \"xl\" }}>\n\t\t\t\t\t\t\t<HStack>\n\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\tsize=\"md\"\n\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\tsetCheck(true);\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\tKnowledge Check\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t<Spacer />\n\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\tsize=\"md\"\n\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\tsetCheck(false);\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\tChatBot\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t</HStack>\n\t\t\t\t\t\t\t{check && <KnowledgeCheck chapterInfo={chapterInfo} />}\n\t\t\t\t\t\t\t{!check && (\n\t\t\t\t\t\t\t\t<ChatBox\n\t\t\t\t\t\t\t\t\tdata={{\n\t\t\t\t\t\t\t\t\t\tid: params.courseId,\n\t\t\t\t\t\t\t\t\t\tchat: chat,\n\t\t\t\t\t\t\t\t\t\tchapter: params.chapterId,\n\t\t\t\t\t\t\t\t\t\tunit: params.unitId,\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</Stack>\n\t\t\t\t\t</Stack>\n\t\t\t\t\t<Spacer />\n\t\t\t\t\t<Divider />\n\t\t\t\t\t<Stack direction=\"row\" pb={8}>\n\t\t\t\t\t\t{data.units[params.unitId].chapters[+params.chapterId - 1] ? (\n\t\t\t\t\t\t\t<LinkBox>\n\t\t\t\t\t\t\t\t<Stack direction={\"row\"} align=\"center\">\n\t\t\t\t\t\t\t\t\t<Icon as={FaChevronLeft} />\n\t\t\t\t\t\t\t\t\t<Stack justify=\"start\" spacing={0}>\n\t\t\t\t\t\t\t\t\t\t<Text textAlign=\"left\">Previous</Text>\n\t\t\t\t\t\t\t\t\t\t<Heading size=\"md\" textAlign=\"left\">\n\t\t\t\t\t\t\t\t\t\t\t<LinkOverlay\n\t\t\t\t\t\t\t\t\t\t\t\tas={Link}\n\t\t\t\t\t\t\t\t\t\t\t\tto={`/course/${params.courseId}/${params.unitId}/${\n\t\t\t\t\t\t\t\t\t\t\t\t\t+params.chapterId - 1\n\t\t\t\t\t\t\t\t\t\t\t\t}`}\n\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\tdata.units[params.unitId].chapters[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t+params.chapterId - 1\n\t\t\t\t\t\t\t\t\t\t\t\t\t].title\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t</LinkOverlay>\n\t\t\t\t\t\t\t\t\t\t</Heading>\n\t\t\t\t\t\t\t\t\t</Stack>\n\t\t\t\t\t\t\t\t</Stack>\n\t\t\t\t\t\t\t</LinkBox>\n\t\t\t\t\t\t) : params.unitId > 0 ? (\n\t\t\t\t\t\t\t<LinkBox>\n\t\t\t\t\t\t\t\t<Stack direction={\"row\"} align=\"center\">\n\t\t\t\t\t\t\t\t\t<Icon as={FaChevronLeft} />\n\t\t\t\t\t\t\t\t\t<Stack justify=\"start\" spacing={0}>\n\t\t\t\t\t\t\t\t\t\t<Text textAlign=\"left\">Previous</Text>\n\t\t\t\t\t\t\t\t\t\t<Heading size=\"md\" textAlign=\"left\">\n\t\t\t\t\t\t\t\t\t\t\t<LinkOverlay\n\t\t\t\t\t\t\t\t\t\t\t\tas={Link}\n\t\t\t\t\t\t\t\t\t\t\t\tto={`/course/${params.courseId}/${+params.unitId - 1}/${\n\t\t\t\t\t\t\t\t\t\t\t\t\tdata.units[+params.unitId - 1].chapters.length - 1\n\t\t\t\t\t\t\t\t\t\t\t\t}`}\n\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\tdata.units[+params.unitId - 1].chapters[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata.units[+params.unitId - 1].chapters.length - 1\n\t\t\t\t\t\t\t\t\t\t\t\t\t].title\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t</LinkOverlay>\n\t\t\t\t\t\t\t\t\t\t</Heading>\n\t\t\t\t\t\t\t\t\t</Stack>\n\t\t\t\t\t\t\t\t</Stack>\n\t\t\t\t\t\t\t</LinkBox>\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\"\"\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t<Spacer />\n\t\t\t\t\t\t{data.units[params.unitId].chapters.length ==\n\t\t\t\t\t\t+params.chapterId + 1 ? (\n\t\t\t\t\t\t\tdata.units.length == +params.unitId + 1 ? (\n\t\t\t\t\t\t\t\t\"\"\n\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t<LinkBox>\n\t\t\t\t\t\t\t\t\t<Stack direction={\"row\"} align=\"center\">\n\t\t\t\t\t\t\t\t\t\t<Stack justify=\"end\" spacing={0}>\n\t\t\t\t\t\t\t\t\t\t\t<Text textAlign=\"right\">Next</Text>\n\t\t\t\t\t\t\t\t\t\t\t<Heading size=\"md\" textAlign=\"right\">\n\t\t\t\t\t\t\t\t\t\t\t\t<LinkOverlay\n\t\t\t\t\t\t\t\t\t\t\t\t\tas={Link}\n\t\t\t\t\t\t\t\t\t\t\t\t\tto={`/course/${params.courseId}/${\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t+params.unitId + 1\n\t\t\t\t\t\t\t\t\t\t\t\t\t}/0`}\n\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t{data.units[+params.unitId + 1].chapters[0].title}\n\t\t\t\t\t\t\t\t\t\t\t\t</LinkOverlay>\n\t\t\t\t\t\t\t\t\t\t\t</Heading>\n\t\t\t\t\t\t\t\t\t\t</Stack>\n\t\t\t\t\t\t\t\t\t\t<Icon as={FaChevronRight} />\n\t\t\t\t\t\t\t\t\t</Stack>\n\t\t\t\t\t\t\t\t</LinkBox>\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t<LinkBox>\n\t\t\t\t\t\t\t\t<Stack direction={\"row\"} align=\"center\">\n\t\t\t\t\t\t\t\t\t<Stack justify=\"end\" spacing={0}>\n\t\t\t\t\t\t\t\t\t\t<Text textAlign=\"right\">Next</Text>\n\t\t\t\t\t\t\t\t\t\t<Heading size=\"md\" textAlign=\"right\">\n\t\t\t\t\t\t\t\t\t\t\t<LinkOverlay\n\t\t\t\t\t\t\t\t\t\t\t\tas={Link}\n\t\t\t\t\t\t\t\t\t\t\t\tto={`/course/${params.courseId}/${params.unitId}/${\n\t\t\t\t\t\t\t\t\t\t\t\t\t+params.chapterId + 1\n\t\t\t\t\t\t\t\t\t\t\t\t}`}\n\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\tdata.units[params.unitId].chapters[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t+params.chapterId + 1\n\t\t\t\t\t\t\t\t\t\t\t\t\t].title\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t</LinkOverlay>\n\t\t\t\t\t\t\t\t\t\t</Heading>\n\t\t\t\t\t\t\t\t\t</Stack>\n\t\t\t\t\t\t\t\t\t<Icon as={FaChevronRight} />\n\t\t\t\t\t\t\t\t</Stack>\n\t\t\t\t\t\t\t</LinkBox>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</Stack>\n\t\t\t\t</Stack>\n\t\t\t</Box>\n\t\t</Stack>\n\t);\n};\n\nfunction KnowledgeCheck(chapterInfo: any) {\n\tchapterInfo = chapterInfo.chapterInfo;\n\n\tconst [answers, setAnswers] = useState(\n\t\tArray.from(chapterInfo.quiz, () => \"\")\n\t);\n\n\tconst [alert, setAlert] = useState(\"\");\n\n\tconst [percentCorrect, setPercentCorrect] = useState(0);\n\n\tconst submitQuiz = () => {\n\t\tconst newAnswers = [...answers];\n\t\tanswers.forEach((answer, index) => {\n\t\t\tnewAnswers[index] =\n\t\t\t\tchapterInfo.quiz[index].answer.toString() === answer ||\n\t\t\t\tanswer === \"correct\"\n\t\t\t\t\t? \"correct\"\n\t\t\t\t\t: \"incorrect\";\n\t\t});\n\t\tsetAnswers(newAnswers);\n\n\t\tconst percentCorrect =\n\t\t\t(Object.fromEntries([\n\t\t\t\t...newAnswers.reduce(\n\t\t\t\t\t(map, key) => map.set(key, (map.get(key) || 0) + 1),\n\t\t\t\t\tnew Map()\n\t\t\t\t),\n\t\t\t])[\"correct\"]\n\t\t\t\t? Object.fromEntries([\n\t\t\t\t\t\t...newAnswers.reduce(\n\t\t\t\t\t\t\t(map, key) => map.set(key, (map.get(key) || 0) + 1),\n\t\t\t\t\t\t\tnew Map()\n\t\t\t\t\t\t),\n\t\t\t\t  ])[\"correct\"]\n\t\t\t\t: 0) / newAnswers.length;\n\n\t\tsetPercentCorrect(percentCorrect);\n\n\t\tsetAlert(\n\t\t\t`${percentCorrect > 0.8 ? \"Woohoo! \" : \"\"}You got ${(\n\t\t\t\tpercentCorrect * 100\n\t\t\t).toFixed(2)}% correct${percentCorrect > 0.8 ? \"!\" : \". Try again!\"}`\n\t\t);\n\t};\n\n\treturn (\n\t\t<Stack>\n\t\t\t{chapterInfo.quiz.map((question: any, index: number) => (\n\t\t\t\t<Question\n\t\t\t\t\tcorrect={answers[index] === \"correct\"}\n\t\t\t\t\tincorrect={answers[index] === \"incorrect\"}\n\t\t\t\t\tquestion={question}\n\t\t\t\t\tonChange={(newValue: string) => {\n\t\t\t\t\t\tconst newAnswers = [...answers];\n\t\t\t\t\t\tnewAnswers[index] = newValue;\n\t\t\t\t\t\tsetAnswers(newAnswers);\n\t\t\t\t\t}}\n\t\t\t\t\tkey={index}\n\t\t\t\t/>\n\t\t\t))}\n\t\t\t<Button onClick={submitQuiz}>Submit</Button>\n\t\t\t{alert.length > 0 ? (\n\t\t\t\t<Box>\n\t\t\t\t\t<Alert\n\t\t\t\t\t\tstatus={percentCorrect > 0.8 ? \"success\" : \"error\"}\n\t\t\t\t\t\tborderRadius={\"md\"}\n\t\t\t\t\t>\n\t\t\t\t\t\t<AlertIcon />\n\t\t\t\t\t\t<Text fontSize={{ base: \"sm\", md: \"md\" }}>{alert}</Text>\n\t\t\t\t\t</Alert>\n\t\t\t\t</Box>\n\t\t\t) : (\n\t\t\t\t\"\"\n\t\t\t)}\n\t\t</Stack>\n\t);\n}\n\nfunction ChatBox(data: any) {\n\tlet courseId = data.data.id;\n\tlet chat = data.data.chat;\n\tlet chapterId = data.data.chapter;\n\tlet unitId = data.data.unit;\n\tif (!chat.examples || courseId != chat.courseId) {\n\t\tchat.examples = [];\n\t}\n\n\tlet [value, setValue] = useState(\"\");\n\n\tconsole.log(\"ENTEREDDDD\");\n\tuseEffect(() => {\n\t\tchat = localStorage.getItem(\"chat\");\n\t});\n\tuseEffect(() => {\n\t\tchat = localStorage.getItem(\"chat\");\n\t}, [global_chat]);\n\tconsole.log(\"ABCDEF\");\n\tconsole.log(chat);\n\treturn (\n\t\t<Stack w=\"100%\" h={\"100%\"}>\n\t\t\t<Box height={\"500px\"} overflow={\"hidden\"} overflowY={\"scroll\"}>\n\t\t\t\t{chat.messages.map((example: any) => (\n\t\t\t\t\t<Stack w=\"100%\" h=\"100%\">\n\t\t\t\t\t\t<HStack>\n\t\t\t\t\t\t\t<Spacer />\n\t\t\t\t\t\t\t<Box\n\t\t\t\t\t\t\t\twidth={\"280px\"}\n\t\t\t\t\t\t\t\tbackgroundColor={\"blue.800\"}\n\t\t\t\t\t\t\t\tborderRadius={\"8px\"}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<Text\n\t\t\t\t\t\t\t\t\twordBreak={\"break-word\"}\n\t\t\t\t\t\t\t\t\tpadding={\"8px\"}\n\t\t\t\t\t\t\t\t\toverflowY={\"hidden\"}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{example.input.content}\n\t\t\t\t\t\t\t\t</Text>\n\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t\t<Stack>\n\t\t\t\t\t\t\t\t<Spacer />\n\t\t\t\t\t\t\t\t<Avatar\n\t\t\t\t\t\t\t\t\tname=\"user\"\n\t\t\t\t\t\t\t\t\tsize=\"xs\"\n\t\t\t\t\t\t\t\t\tsrc=\"https://media.istockphoto.com/id/1300845620/vector/user-icon-flat-isolated-on-white-background-user-symbol-vector-illustration.jpg?s=612x612&w=0&k=20&c=yBeyba0hUkh14_jgv1OKqIH0CCSWU_4ckRkAoy2p73o=\"\n\t\t\t\t\t\t\t\t></Avatar>\n\t\t\t\t\t\t\t</Stack>\n\t\t\t\t\t\t</HStack>\n\t\t\t\t\t\t<HStack>\n\t\t\t\t\t\t\t<Avatar\n\t\t\t\t\t\t\t\tname=\"user\"\n\t\t\t\t\t\t\t\tsize=\"xs\"\n\t\t\t\t\t\t\t\tsrc=\"https://media.istockphoto.com/id/1300845620/vector/user-icon-flat-isolated-on-white-background-user-symbol-vector-illustration.jpg?s=612x612&w=0&k=20&c=yBeyba0hUkh14_jgv1OKqIH0CCSWU_4ckRkAoy2p73o=\"\n\t\t\t\t\t\t\t></Avatar>\n\n\t\t\t\t\t\t\t<Stack>\n\t\t\t\t\t\t\t\t<Box\n\t\t\t\t\t\t\t\t\twidth={\"280px\"}\n\t\t\t\t\t\t\t\t\tbackgroundColor={\"blue.800\"}\n\t\t\t\t\t\t\t\t\tborderRadius={\"8px\"}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<Text\n\t\t\t\t\t\t\t\t\t\twordBreak={\"break-word\"}\n\t\t\t\t\t\t\t\t\t\tpadding={\"8px\"}\n\t\t\t\t\t\t\t\t\t\toverflowY={\"hidden\"}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t{example.output.content}\n\t\t\t\t\t\t\t\t\t</Text>\n\t\t\t\t\t\t\t\t\t<Spacer />\n\t\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t\t</Stack>\n\t\t\t\t\t\t</HStack>\n\t\t\t\t\t</Stack>\n\t\t\t\t))}\n\t\t\t</Box>\n\t\t\t<Spacer />\n\t\t\t<Form method=\"post\">\n\t\t\t\t<Input type=\"hidden\" value={courseId} name=\"courseId\" />\n\t\t\t\t<Input type=\"hidden\" value={chapterId} name=\"chapterId\" />\n\t\t\t\t<Input type=\"hidden\" value={unitId} name=\"unitId\" />\n\t\t\t\t<Input type=\"hidden\" value={chat.examples} name=\"chat\" />\n\t\t\t\t<Textarea\n\t\t\t\t\tplaceholder=\"Send Message\"\n\t\t\t\t\tvalue={value}\n\t\t\t\t\tonChange={(e) => setValue(e.currentTarget.value)}\n\t\t\t\t\tname=\"message\"\n\t\t\t\t\tonKeyDown={(e) => {\n\t\t\t\t\t\tif (e.code == \"Enter\") {\n\t\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\t\tsetValue(\"\");\n\t\t\t\t\t\t\tdocument.forms[0].submit();\n\t\t\t\t\t\t}\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t\t<Box height={\"2px\"} />\n\t\t\t</Form>\n\t\t</Stack>\n\t);\n}\n\nexport default PostSlug;\n", "import { YoutubeTranscript } from \"youtube-transcript\";\nimport { db } from \"../../src/utils/firebase\";\nimport {\n\tgetDoc,\n\taddDoc,\n\tdoc,\n\tcollection,\n\tgetDocs,\n\tquery,\n\twhere,\n\tsetDoc,\n} from \"@firebase/firestore\";\nimport { m } from \"framer-motion\";\n\nexport type Course = {\n\ttitle: string;\n\tunits: {\n\t\ttitle: string;\n\t\tchapters: {\n\t\t\ttitle: string;\n\t\t}[];\n\t}[];\n};\n\nexport async function getAllCourses() {\n\tconst coursesRef = await collection(db, \"courses\");\n\tconst queryRef = query(\n\t\tcoursesRef,\n\t\twhere(\"completed\", \"==\", true),\n\t\twhere(\"public\", \"==\", true)\n\t);\n\tconst coursesSnapshot = await getDocs(queryRef);\n\tconst coursesData = await coursesSnapshot.docs.map((doc) => {\n\t\treturn { data: doc.data(), id: doc.id };\n\t});\n\treturn coursesData;\n}\n\nexport async function getCourse(id: string): Promise<any> {\n\tlet data: Course = {\n\t\ttitle: \"\",\n\t\tunits: [],\n\t};\n\tconst document = await getDoc(doc(db, \"courses\", id));\n\n\tif (document.exists()) {\n\t\tdata = document.data() as Course;\n\t\treturn data;\n\t} else {\n\t\treturn {\n\t\t\terror: \"Course not found\",\n\t\t};\n\t}\n}\n\nexport async function promptGemini(prompt: string) {\n\tconst response = await fetch(\n\t\t`https://generativelanguage.googleapis.com/v1beta/models/gemini-1.5-flash:generateContent?key=${process.env.GEMINI_API}`,\n\t\t{\n\t\t\tmethod: \"POST\",\n\t\t\theaders: {\n\t\t\t\t\"Content-Type\": \"application/json\",\n\t\t\t},\n\t\t\tbody: JSON.stringify({\n\t\t\t\tcontents: [\n\t\t\t\t\t{\n\t\t\t\t\t\trole: \"user\",\n\t\t\t\t\t\tparts: [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\ttext: prompt,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t],\n\t\t\t\t\t},\n\t\t\t\t],\n\n\t\t\t\tgenerationConfig: {\n\t\t\t\t\ttemperature: 1,\n\t\t\t\t\ttopK: 64,\n\t\t\t\t\ttopP: 0.95,\n\t\t\t\t\tmaxOutputTokens: 8192,\n\t\t\t\t\tresponseMimeType: \"application/json\",\n\t\t\t\t},\n\t\t\t}),\n\t\t}\n\t);\n\tconst jsonResponse = await response.json();\n\n\tconsole.log(prompt, \"\\n\", jsonResponse);\n\n\treturn jsonResponse.candidates[0].content.parts[0].text;\n}\n\n// returns id of video given search query\nexport async function searchYouTube(searchQuery: string) {\n\tconst response = await fetch(\n\t\t`https://www.googleapis.com/youtube/v3/search?key=${process.env.YOUTUBE_API}&q=${searchQuery}&videoDuration=medium&videoEmbeddable=true&type=video&part=snippet&maxResults=1`,\n\t\t{\n\t\t\tmethod: \"GET\",\n\t\t}\n\t);\n\tconst json = await response.json();\n\tif (json.items[0] == undefined) {\n\t\tconsole.log(\"search yt\");\n\t}\n\treturn json.items[0].id.videoId;\n}\n\n// returns transcript of video given video id\nexport async function getTranscript(videoId: string) {\n\ttry {\n\t\tlet transcript_arr = await YoutubeTranscript.fetchTranscript(videoId, {\n\t\t\tlang: \"en\",\n\t\t\tcountry: \"EN\",\n\t\t});\n\t\tlet transcript = \"\";\n\t\tfor (let i = 0; i < transcript_arr.length; i++) {\n\t\t\ttranscript += transcript_arr[i].text + \" \";\n\t\t}\n\t\treturn { transcript: transcript.replaceAll(\"\\n\", \" \"), success: true };\n\t} catch (e) {\n\t\treturn { transcript: \"error\", success: false };\n\t}\n}\n\nexport async function createChapters(title: string, unitsArray: string[]) {\n\tlet unitsString = \"\";\n\tfor (let i = 1; i <= unitsArray.length; i++) {\n\t\tunitsString += `Unit ${i}: ${unitsArray[i - 1]}\\n`;\n\t}\n\tconst prompt = `${unitsString}\n\tIt is your job to create a course about ${title}. The user has requested to create chapters for each of the above units. Then, for each chapter, provide a detailed youtube search query that can be used to find an informative educational video for each chapter. Each query should give an educational informative course in youtube.\n\tImportant: Give the response in an array of JSON like the example below with the title of each array index corresponding to the unit title:\n\t[\n\t\t{\n\t\t\t\"title\": \"World War II Battles\",\n\t\t\t\"chapters\": [\n\t\t\t\t{\n\t\t\t\t\t\"youtube_search_query\": \"all about important battles in WW2\",\n\t\t\t\t\t\"chapter_title\": \"Important Battles\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"youtube_search_query\": \"battle strategies in WW2\",\n\t\t\t\t\t\"chapter_title\": \"Battle Strategies\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"youtube_search_query\": \"Battle of Stalingrad short explanation\",\n\t\t\t\t\t\"chapter_title\": \"Battle of Stalingrad\"\n\t\t\t\t} etc...\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"title\": \"World War II Alliances\",\n\t\t\t\"chapters\": [\n\t\t\t\t{\n\t\t\t\t\t\"youtube_search_query\": \"all about the allied powers in WW2\",\n\t\t\t\t\t\"chapter_title\": \"Allied Powers\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"youtube_search_query\": \"all about the axis powers in WW2\",\n\t\t\t\t\t\"chapter_title\": \"Axis Powers\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"youtube_search_query\": \"netural powers and their roles in WW2\",\n\t\t\t\t\t\"chapter_title\": \"Neutral Powers\"\n\t\t\t\t} etc...\n\t\t\t]\n\t\t}\n\t]\n\t`;\n\ttry {\n\t\tconsole.log(\"starting to create chapters\");\n\t\tconst geminiResponse = await promptGemini(prompt);\n\t\tconsole.log(\"created chapters\");\n\t\tconsole.log(geminiResponse);\n\n\t\tconst units = await JSON.parse(geminiResponse);\n\t\tconsole.log(\"created chapters\");\n\t\tconst docRef = await addDoc(collection(db, \"courses\"), {\n\t\t\ttitle: title,\n\t\t\tunits: units,\n\t\t\tcompleted: false,\n\t\t\tpublic: false,\n\t\t});\n\t\tconsole.log(\"added to firebase\", docRef.id);\n\t\treturn {\n\t\t\tcourseId: await docRef.id,\n\t\t};\n\t} catch (error) {\n\t\tconsole.log(\"FAILED: Error Info getting course info\");\n\t\tconsole.log(\"error:\\n\", error, \"\\n\\n\");\n\t\treturn {\n\t\t\tmessage: error as string,\n\t\t};\n\t}\n}\n\nexport async function queryChat(\n\tprompt: string,\n\tcontext: string,\n\texamples: any[],\n\tmessages: any[]\n) {\n\tmessages.push({\n\t\tcontent: prompt,\n\t});\n\tconst response = await fetch(\n\t\t`https://generativelanguage.googleapis.com/v1beta2/models/chat-bison-001:generateMessage?key=${process.env.GEMINI_API}`,\n\t\t{\n\t\t\tmethod: \"POST\",\n\t\t\theaders: {\n\t\t\t\t\"Content-Type\": \"application/json\",\n\t\t\t},\n\t\t\tbody: JSON.stringify({\n\t\t\t\tprompt: {\n\t\t\t\t\tcontext: context,\n\t\t\t\t\tmessages: messages,\n\t\t\t\t\texamples: examples,\n\t\t\t\t},\n\t\t\t\ttemperature: 0.25,\n\t\t\t\ttop_k: 40,\n\t\t\t\ttop_p: 0.95,\n\t\t\t\tcandidate_count: 1,\n\t\t\t}),\n\t\t}\n\t);\n\n\tconst json = await response.json();\n\tconsole.log(\"QUERYCHAT\");\n\tconsole.log(json);\n\texamples.push({\n\t\tinput: {\n\t\t\tcontent: prompt,\n\t\t},\n\t\toutput: {\n\t\t\tcontent: json.candidates[0].content,\n\t\t},\n\t});\n\n\treturn [examples, messages];\n}\n\nexport async function chatBot(\n\tprompt: string,\n\tid: string,\n\tunitId: string,\n\tchapterId: string,\n\tchat: any\n) {\n\tconsole.log(\"CHATBOT ENTERED\");\n\n\tconsole.log(id);\n\t// const document = await getDoc(doc(db, \"chat\", id));\n\t// let data: any;\n\n\t// if (document.exists()) {\n\t// \tdata = document.data();\n\t// \tconsole.log(data);\n\t// } else {\n\t// \tdata = {\n\t// \t\tcourseId: \"\",\n\t// \t\texamples: [],\n\t// \t\tmessages: [],\n\t// \t};\n\t// }\n\t// let examples = data.examples;\n\t// let messages = data.messages;\n\t// let courseId = data.courseId;\n\n\t// if (id != data.courseId) {\n\t// \tcourseId = id;\n\t// \texamples = [];\n\t// \tmessages = [];\n\t// }\n\n\t// [examples, messages] = await queryChat(prompt, context, examples, messages);\n\n\t// const docRef = await setDoc(doc(db, \"chat\", \"MfmN5BhbPpaLzBuNjV9l\"), {\n\t// \tcourseId: courseId,\n\t// \texamples: examples,\n\t// \tmessages: messages,\n\t// });\n\t// return examples;\n\n\tif (chat.courseId != id) {\n\t\tchat.examples = [];\n\t\tchat.courseId = id;\n\t}\n\n\tconst course = await getCourse(id);\n\tprompt =\n\t\t\"answer in simple english. THE FOLLOWING IS THE PROMPT: \" +\n\t\tprompt +\n\t\t\"\\nONE TO TWO SENTENCE ANSWER USING THE FOLLOWING CONTEXT USING PLAIN AND SIMPLE ENGLISH. The title of the course is: \" +\n\t\tcourse.title +\n\t\t\". The course has the following unit titles and chapters: \" +\n\t\tcourse.units[unitId].title +\n\t\t\" with the current chapter on \" +\n\t\tcourse.units[unitId].chapters[chapterId].title +\n\t\t\" and a summary of \" +\n\t\tcourse.units[unitId].chapters[chapterId].summary;\n\n\tconst response = await promptGemini(\n\t\t// \"ONE TO TWO SENTEC ANSWER\" +JSON.stringify(course) +\n\t\t// \t\"\\nThe above is context about the course. The below is the actual question you have been asked: \" +\n\t\t// \tprompt\n\t\tprompt\n\t);\n\tconsole.log(\"prompt\");\n\tconsole.log(prompt);\n\tconsole.log(\"context chat\");\n\tconsole.log(chat);\n\tconsole.log(\"chat bot response\");\n\tconsole.log(response);\n\n\tchat.examples.push({\n\t\tinput: {\n\t\t\tcontent: prompt,\n\t\t},\n\t\toutput: {\n\t\t\tcontent: JSON.parse(response).answer\n\t\t\t\t? JSON.parse(response).answer\n\t\t\t\t: response,\n\t\t},\n\t});\n\tchat.messages = chat.examples;\n\tconsole.log(\"\\n\\nCURRENT CHAT\");\n\tconsole.log(chat);\n\treturn chat;\n}\n", "import { initializeApp, getApps } from \"firebase/app\";\nimport { getFirestore } from \"firebase/firestore\";\n\nconst firebaseConfig = {\n\tapiKey: process.env.FIREBASE_API_KEY,\n\tauthDomain: process.env.FIREBASE_AUTH_DOMAIN,\n\tprojectId: process.env.FIREBASE_PROJECT_ID,\n\tstorageBucket: process.env.FIREBASE_STORAGE_BUCKET,\n\tmessagingSenderId: process.env.FIREBASE_MESSAGING_SENDER_ID,\n\tappId: process.env.FIREBASE_APP_ID,\n\tmeasurementId: process.env.FIREBASE_MEASUREMENT_ID,\n};\n\nlet firebase_app =\n\tgetApps().length === 0 ? initializeApp(firebaseConfig) : getApps()[0];\n\nexport default firebase_app;\n\nconst db = getFirestore(firebase_app);\n\nexport { db };\n", "import {\n\tBox,\n\tRadio,\n\tRadioGroup,\n\tStack,\n\tStackDivider,\n\tText,\n} from \"@chakra-ui/react\";\nimport { useState } from \"react\";\n\ntype QuestionProps = {\n\tquestion: any;\n\tonChange: Function;\n\tcorrect: boolean;\n\tincorrect: boolean;\n};\n\nexport default function Question({\n\tquestion,\n\tonChange,\n\tcorrect,\n\tincorrect,\n}: QuestionProps) {\n\tconst [value, setValue] = useState(\"\");\n\n\treturn (\n\t\t<Box\n\t\t\tbg={correct ? \"green.800\" : incorrect ? \"red.800\" : \"whiteAlpha.300\"}\n\t\t\tborderRadius={\"md\"}\n\t\t\tp={4}\n\t\t>\n\t\t\t<Stack>\n\t\t\t\t<Text fontWeight={\"bold\"}>{question.question}</Text>\n\t\t\t\t<RadioGroup\n\t\t\t\t\tonChange={(e) => {\n\t\t\t\t\t\tonChange(e);\n\t\t\t\t\t\tsetValue(e);\n\t\t\t\t\t}}\n\t\t\t\t\tvalue={value}\n\t\t\t\t>\n\t\t\t\t\t<Stack spacing={1} divider={<StackDivider />}>\n\t\t\t\t\t\t{question.answers\n\t\t\t\t\t\t\t? question.answers.map((answer: any, i: number) => (\n\t\t\t\t\t\t\t\t\t<Radio\n\t\t\t\t\t\t\t\t\t\tsize=\"sm\"\n\t\t\t\t\t\t\t\t\t\tname={`question${i}`}\n\t\t\t\t\t\t\t\t\t\tkey={i}\n\t\t\t\t\t\t\t\t\t\tcolorScheme=\"blue\"\n\t\t\t\t\t\t\t\t\t\tvalue={`${i}`}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t{answer.choice}\n\t\t\t\t\t\t\t\t\t</Radio>\n\t\t\t\t\t\t\t  ))\n\t\t\t\t\t\t\t: question.choices.map((choices: any, i: number) => (\n\t\t\t\t\t\t\t\t\t<Radio\n\t\t\t\t\t\t\t\t\t\tsize=\"sm\"\n\t\t\t\t\t\t\t\t\t\tname={`question${i}`}\n\t\t\t\t\t\t\t\t\t\tkey={i}\n\t\t\t\t\t\t\t\t\t\tvalue={`${i}`}\n\t\t\t\t\t\t\t\t\t\tcolorScheme=\"blue\"\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t{choices}\n\t\t\t\t\t\t\t\t\t</Radio>\n\t\t\t\t\t\t\t  ))}\n\t\t\t\t\t</Stack>\n\t\t\t\t</RadioGroup>\n\t\t\t</Stack>\n\t\t</Box>\n\t);\n}\n", "import {\n\tDrawer,\n\tDrawerBody,\n\tDrawerFooter,\n\tDrawerHeader,\n\tDrawerOverlay,\n\tDrawerContent,\n\tDrawerCloseButton,\n\tuseDisclosure,\n\tButton,\n\tIconButton,\n\tStack,\n\tHeading,\n\tLink,\n\tBox,\n\tStackDivider,\n} from \"@chakra-ui/react\";\nimport { useRef } from \"react\";\nimport { FaBars } from \"react-icons/fa6\";\nimport { Link as RemixLink } from \"@remix-run/react\";\n\ntype SidebarProps = {\n\tdata: any;\n\tparams: any;\n};\n\nconst CourseSidebar = ({ data, params }: SidebarProps) => {\n\tconst { isOpen, onOpen, onClose } = useDisclosure();\n\tconst btnRef = useRef<HTMLButtonElement>(null);\n\n\treturn (\n\t\t<>\n\t\t\t<Button\n\t\t\t\tcolorScheme=\"gray\"\n\t\t\t\tposition={\"fixed\"}\n\t\t\t\ttop={105}\n\t\t\t\tright={4}\n\t\t\t\tzIndex={11}\n\t\t\t\tsize=\"sm\"\n\t\t\t\tleftIcon={<FaBars />}\n\t\t\t\tdisplay={{ base: \"inline-flex\", md: \"none\" }}\n\t\t\t\tref={btnRef}\n\t\t\t\tonClick={onOpen}\n\t\t\t>\n\t\t\t\tOpen Menu\n\t\t\t</Button>\n\t\t\t<Stack\n\t\t\t\tbg=\"whiteAlpha.300\"\n\t\t\t\tw={\"md\"}\n\t\t\t\tp={8}\n\t\t\t\ttop={90}\n\t\t\t\tposition=\"sticky\"\n\t\t\t\th=\"100%\"\n\t\t\t\tborderTopRightRadius={\"3xl\"}\n\t\t\t\tboxShadow={\"xl\"}\n\t\t\t\tdivider={<StackDivider />}\n\t\t\t\tdisplay={{ base: \"none\", md: \"flex\" }}\n\t\t\t>\n\t\t\t\t<Heading fontWeight={\"black\"} size=\"2xl\">\n\t\t\t\t\t{data.title}\n\t\t\t\t</Heading>\n\t\t\t\t{data.units.map((unit: any, i: number) => (\n\t\t\t\t\t<Box key={i}>\n\t\t\t\t\t\t<Stack spacing={0}>\n\t\t\t\t\t\t\t<Box\n\t\t\t\t\t\t\t\tcolor=\"whiteAlpha.600\"\n\t\t\t\t\t\t\t\tfontWeight=\"semibold\"\n\t\t\t\t\t\t\t\tletterSpacing=\"wide\"\n\t\t\t\t\t\t\t\tfontSize=\"xs\"\n\t\t\t\t\t\t\t\ttextTransform=\"uppercase\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tUnit {i + 1}\n\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t\t<Link\n\t\t\t\t\t\t\t\tas={RemixLink}\n\t\t\t\t\t\t\t\tfontSize=\"xl\"\n\t\t\t\t\t\t\t\tfontWeight={\"bold\"}\n\t\t\t\t\t\t\t\tto={`/course/${params.courseId}/${i}`}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{unit.title}\n\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t</Stack>\n\t\t\t\t\t\t<Stack spacing={0}>\n\t\t\t\t\t\t\t{unit.chapters.map((chapter: any, index: number) => (\n\t\t\t\t\t\t\t\t<Link\n\t\t\t\t\t\t\t\t\tkey={index}\n\t\t\t\t\t\t\t\t\tas={RemixLink}\n\t\t\t\t\t\t\t\t\tto={`/course/${params.courseId}/${i}/${index}`}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{chapter.title}\n\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t</Stack>\n\t\t\t\t\t</Box>\n\t\t\t\t))}\n\t\t\t</Stack>\n\t\t\t<Drawer\n\t\t\t\tisOpen={isOpen}\n\t\t\t\tplacement=\"right\"\n\t\t\t\tonClose={onClose}\n\t\t\t\tfinalFocusRef={btnRef}\n\t\t\t>\n\t\t\t\t<DrawerOverlay />\n\t\t\t\t<DrawerContent>\n\t\t\t\t\t<DrawerCloseButton mt={2} />\n\t\t\t\t\t<DrawerHeader>{data.title}</DrawerHeader>\n\n\t\t\t\t\t<DrawerBody>\n\t\t\t\t\t\t<Stack spacing={4}>\n\t\t\t\t\t\t\t{data.units.map((unit: any, i: number) => (\n\t\t\t\t\t\t\t\t<Box key={i}>\n\t\t\t\t\t\t\t\t\t<Stack spacing={0}>\n\t\t\t\t\t\t\t\t\t\t<Box\n\t\t\t\t\t\t\t\t\t\t\tcolor=\"whiteAlpha.600\"\n\t\t\t\t\t\t\t\t\t\t\tfontWeight=\"semibold\"\n\t\t\t\t\t\t\t\t\t\t\tletterSpacing=\"wide\"\n\t\t\t\t\t\t\t\t\t\t\tfontSize=\"xs\"\n\t\t\t\t\t\t\t\t\t\t\ttextTransform=\"uppercase\"\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\tUnit {i + 1}\n\t\t\t\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t\t\t\t\t<Link\n\t\t\t\t\t\t\t\t\t\t\tas={RemixLink}\n\t\t\t\t\t\t\t\t\t\t\tfontSize=\"xl\"\n\t\t\t\t\t\t\t\t\t\t\tfontWeight={\"bold\"}\n\t\t\t\t\t\t\t\t\t\t\tto={`/course/${params.courseId}/${i}`}\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t{unit.title}\n\t\t\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t\t\t</Stack>\n\t\t\t\t\t\t\t\t\t<Stack spacing={0}>\n\t\t\t\t\t\t\t\t\t\t{unit.chapters.map((chapter: any, index: number) => (\n\t\t\t\t\t\t\t\t\t\t\t<Link\n\t\t\t\t\t\t\t\t\t\t\t\tkey={index}\n\t\t\t\t\t\t\t\t\t\t\t\tas={RemixLink}\n\t\t\t\t\t\t\t\t\t\t\t\tto={`/course/${params.courseId}/${i}/${index}`}\n\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t{chapter.title}\n\t\t\t\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t\t\t</Stack>\n\t\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t</Stack>\n\t\t\t\t\t</DrawerBody>\n\t\t\t\t</DrawerContent>\n\t\t\t</Drawer>\n\t\t</>\n\t);\n};\n\nexport default CourseSidebar;\n", "import type { LoaderArgs } from \"@remix-run/node\";\nimport { json } from \"@remix-run/node\";\nimport { useLoaderData } from \"@remix-run/react\";\nimport { getCourse } from \"~/models/course.server\";\nimport { Box, Stack } from \"@chakra-ui/react\";\nimport CourseSidebar from \"src/components/CourseSidebar\";\n\nexport const loader = async ({ params }: LoaderArgs) => {\n\tconst data = await getCourse(params.courseId as string);\n\n\tif (data.error) {\n\t\tthrow new Response(null, {\n\t\t\tstatus: 404,\n\t\t\tstatusText: \"Not Found\",\n\t\t});\n\t} else {\n\t\treturn json({\n\t\t\tparams: params,\n\t\t\tdata: await getCourse(params.courseId as string),\n\t\t});\n\t}\n};\n\nexport default function PostSlug() {\n\tconst { params, data } = useLoaderData<typeof loader>();\n\n\treturn (\n\t\t<Stack direction={\"row\"} h=\"100%\">\n\t\t\t<CourseSidebar data={data} params={params} />\n\n\t\t\t<Box overflowY={\"scroll\"} p={8} w=\"100%\">\n\t\t\t\tCourse Name: {data.title}, Unit Name: {data.units[0].title}\n\t\t\t</Box>\n\t\t</Stack>\n\t);\n}\n", "import type { LoaderArgs } from \"@remix-run/node\";\nimport { json } from \"@remix-run/node\";\nimport { useLoaderData } from \"@remix-run/react\";\nimport { getCourse } from \"~/models/course.server\";\nimport { Box, Stack } from \"@chakra-ui/react\";\nimport CourseSidebar from \"src/components/CourseSidebar\";\n\nexport const loader = async ({ params }: LoaderArgs) => {\n\tconst data = await getCourse(params.courseId as string);\n\tif (data.error) {\n\t\tthrow new Response(null, {\n\t\t\tstatus: 404,\n\t\t\tstatusText: \"Not Found\",\n\t\t});\n\t} else {\n\t\treturn json({\n\t\t\tparams: params,\n\t\t\tdata: await getCourse(params.courseId as string),\n\t\t});\n\t}\n};\n\nexport default function PostSlug() {\n\tconst { params, data } = useLoaderData<typeof loader>();\n\n\treturn (\n\t\t<Stack direction={\"row\"} h=\"100%\">\n\t\t\t<CourseSidebar data={data} params={params} />\n\t\t\t<Box overflowY={\"scroll\"} p={8} w=\"100%\">\n\t\t\t\tCourse Name: {data.title}\n\t\t\t</Box>\n\t\t</Stack>\n\t);\n}\n", "import {\n\tAlert,\n\tAlertIcon,\n\tBox,\n\tButton,\n\tDivider,\n\tHeading,\n\tStack,\n\tText,\n\tStep,\n\tStepIcon,\n\tStepIndicator,\n\tStepNumber,\n\tStepSeparator,\n\tStepStatus,\n\tStepTitle,\n\tStepper,\n\tuseSteps,\n\tIconButton,\n\tIcon,\n} from \"@chakra-ui/react\";\nimport type { ActionArgs, LoaderArgs } from \"@remix-run/node\";\nimport { json, redirect } from \"@remix-run/node\";\nimport { useFetcher, useLoaderData, useNavigate } from \"@remix-run/react\";\nimport { doc, updateDoc } from \"firebase/firestore\";\nimport mixpanel from \"mixpanel-browser\";\nimport { useCallback, useEffect, useRef, useState } from \"react\";\nimport {\n\tFaCheck,\n\tFaChevronRight,\n\tFaEnvelope,\n\tFaChevronLeft,\n\tFaBars,\n} from \"react-icons/fa6\";\nimport CreateCourseChapter from \"src/components/CreateCourseChapter\";\nimport { db } from \"src/utils/firebase\";\nimport {\n\tgetCourse,\n\tgetTranscript,\n\tpromptGemini,\n\tsearchYouTube,\n} from \"~/models/course.server\";\n\nexport const loader = async ({ params }: LoaderArgs) => {\n\tconst data = await getCourse(params.courseId as string);\n\tif (data.error) {\n\t\tthrow new Response(null, {\n\t\t\tstatus: 404,\n\t\t\tstatusText: \"Not Found\",\n\t\t});\n\t} else {\n\t\treturn json({\n\t\t\tparams: params,\n\t\t\tdata: await getCourse(params.courseId as string),\n\t\t});\n\t}\n};\n\nexport const action = async ({ request }: ActionArgs) => {\n\ttry {\n\t\tconst formData = await request.formData();\n\t\tconst final_data = formData.get(\"final_data\") as string;\n\t\tif (final_data == \"true\") {\n\t\t\tconst courseInfo = JSON.parse(formData.get(\"courseInfo\") as string);\n\t\t\tconst courseId = formData.get(\"courseId\") as string;\n\t\t\tconst imageResponseRaw = await fetch(\n\t\t\t\t`https://api.unsplash.com/search/photos?per_page=1&query=${courseInfo.title}&client_id=${process.env.UNSPLASH_API}`\n\t\t\t);\n\t\t\tconst imageResponse = await imageResponseRaw.json();\n\t\t\tcourseInfo.image = imageResponse.results[0].urls.small_s3;\n\t\t\tawait updateDoc(doc(db, \"courses\", courseId), courseInfo);\n\t\t\treturn redirect(`/course/${courseId}/0/0`);\n\t\t} else {\n\t\t\tlet chapter_title = formData.get(\"chapter_title\") as string;\n\t\t\tlet youtube_search_query = formData.get(\"youtube_search_query\") as string;\n\t\t\tconst videoId = await searchYouTube(youtube_search_query);\n\t\t\tconst transcript = await getTranscript(videoId);\n\n\t\t\tlet combinedPrompt; // Variable to hold the prompt for the AI (Gemini)\n\n\t\t\t// Check if the transcript was successfully provided\n\t\t\tif (transcript.success) {\n\t\t\t\t// If transcript is available, ask for both a summary and a quiz based on the transcript\n\t\t\t\tcombinedPrompt = `\n    Please perform the following two tasks based on the provided transcript:\n    1. Summarize the transcript in 250 words or less. Do not mention sponsors or anything unrelated to the main topic. Do not introduce the summary with phrases like \"This is a summary.\"\n    2. Generate at least 3 general educational quiz questions based on the transcript. The questions should cover the entire content and not focus on specific details. The output should be an array of questions, with each question containing a question string, 4 answer choices in an array, and the index of the correct answer.\n\n    Here is the transcript: ${transcript}\n\n    Return your answer in the following JSON format:\n    {\n      \"chapter_title\": \"${chapter_title}\",\n      \"summary\": \"<summary>\",\n      \"quiz\": [\n        {\n          \"question\": \"<question>\",\n          \"choices\": [\"choice1\", \"choice2\", \"choice3\", \"choice4\"],\n          \"answer\": <index>\n        },\n        ...\n      ]\n    }`;\n\t\t\t} else {\n\t\t\t\t// If transcript is not available, ask for a summary and quiz based on the chapter title alone\n\t\t\t\tcombinedPrompt = `\n    Please perform the following two tasks:\n    1. Summarize the topic \"${chapter_title}\" in 250 words or less.\n    2. Generate at least 3 general educational quiz questions related to the topic. The output should be an array of questions, with each question containing a question string, 4 answer choices in an array, and the index of the correct answer.\n\n    Return your answer in the following JSON format:\n    {\n      \"chapter_title\": \"${chapter_title}\",\n      \"summary\": \"<summary>\",\n      \"quiz\": [\n        {\n          \"question\": \"<question>\",\n          \"choices\": [\"choice1\", \"choice2\", \"choice3\", \"choice4\"],\n          \"answer\": <index>\n        },\n        ...\n      ]\n    }`;\n\t\t\t}\n\n\t\t\t// Send the combined prompt to Gemini to get both the summary and quiz\n\t\t\tconst combinedResponse = await promptGemini(combinedPrompt);\n\t\t\tconsole.log(chapter_title, \" combinedResponse\\n\", combinedResponse);\n\n\t\t\t// Parse the response from Gemini to extract the summary and quiz\n\t\t\tconst parsedResponse = JSON.parse(combinedResponse);\n\t\t\tconst summary = parsedResponse.summary; // Extract the summary\n\t\t\tconst quiz = parsedResponse.quiz; // Extract the quiz\n\n\t\t\t// Log the summary and quiz to the console for debugging\n\t\t\tconsole.log(chapter_title, \" summary\\n\", summary);\n\t\t\tconsole.log(chapter_title, \" quiz\\n\", quiz);\n\n\t\t\t// Return an object containing the success flag and chapter information (title, video ID, summary, and quiz)\n\t\t\treturn {\n\t\t\t\tsuccess: true,\n\t\t\t\tchapterInfo: {\n\t\t\t\t\ttitle: chapter_title, // The chapter title\n\t\t\t\t\tvideo: videoId, // Video ID related to the chapter (if applicable)\n\t\t\t\t\tsummary: summary, // Summary generated from the transcript or chapter title\n\t\t\t\t\tquiz: quiz, // Quiz generated from the transcript or chapter title\n\t\t\t\t},\n\t\t\t};\n\t\t}\n\t} catch (error) {\n\t\tconsole.error(error);\n\t\treturn {\n\t\t\tsuccess: false,\n\t\t};\n\t}\n};\n\nexport default function FinishCourse() {\n\tconst { params, data } = useLoaderData<typeof loader>();\n\n\tconst [isErrored, setIsErrored] = useState(false);\n\tconst [isLoading, setIsLoading] = useState<string[]>([]);\n\tconst [finalData, setFinalData] = useState<any[][]>([]);\n\tconst [allDone, setAllDone] = useState(false);\n\n\tconst elementsRefs: any = data.units.map((unit: any) =>\n\t\tunit.chapters.map(() => useRef())\n\t);\n\n\tuseEffect(() => {\n\t\tif (finalData.length === 0) {\n\t\t\tsetFinalData(\n\t\t\t\tdata.units.map((unit: any) =>\n\t\t\t\t\tunit.chapters.map(() => {\n\t\t\t\t\t\treturn {};\n\t\t\t\t\t})\n\t\t\t\t)\n\t\t\t);\n\t\t}\n\t}, [finalData]);\n\n\tconst navigate = useNavigate();\n\n\tconst generateChapterInfos = useCallback(() => {\n\t\tsetIsErrored(false);\n\t\tdata.units.forEach((unit: any, i: number) => {\n\t\t\tunit.chapters.forEach((chapter: any, j: number) => {\n\t\t\t\telementsRefs[i][j].current.triggerLoad();\n\t\t\t\tsetIsLoading((prev) => [...prev, `${i} ${j}`]);\n\t\t\t});\n\t\t});\n\t}, []);\n\n\tconst steps = [\n\t\t{ title: \"First\", description: \"Enter Units\" },\n\t\t{ title: \"Second\", description: \"Confirm Chapters\" },\n\t\t{ title: \"Third\", description: \"Save & Finish\" },\n\t];\n\n\tconst { activeStep, setActiveStep } = useSteps({\n\t\tindex: 1,\n\t\tcount: steps.length,\n\t});\n\n\tconst onComplete = () => {\n\t\tsetAllDone(true);\n\t\tsetActiveStep(2);\n\t};\n\n\tconst fetcher = useFetcher();\n\n\tconst saveAndFinish = () => {\n\t\tmixpanel.track(\"Save Course\", {\n\t\t\ttitle: data.title,\n\t\t});\n\t\tconst newLoading = isLoading;\n\t\tnewLoading.push(\"submitting\");\n\t\tsetIsLoading(newLoading);\n\t\tconst formattedData = {\n\t\t\ttitle: data.title,\n\t\t\tpublic: true,\n\t\t\tcompleted: true,\n\t\t\tunits: [\n\t\t\t\t...data.units.map((unit: any, i: number) => {\n\t\t\t\t\treturn {\n\t\t\t\t\t\ttitle: unit.title,\n\t\t\t\t\t\tchapters: [\n\t\t\t\t\t\t\t...unit.chapters.map(\n\t\t\t\t\t\t\t\t(chapter: any, j: number) => finalData[i][j]\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t],\n\t\t\t\t\t};\n\t\t\t\t}),\n\t\t\t],\n\t\t};\n\t\tconst formData = new FormData();\n\t\tformData.append(\"final_data\", \"true\");\n\t\tformData.append(\"courseId\", params.courseId);\n\t\tformData.append(\"courseInfo\", JSON.stringify(formattedData));\n\t\tfetcher.submit(formData, { method: \"post\" });\n\t};\n\n\treturn (\n\t\t<Stack margin=\"auto\" maxW=\"xl\" p={8} h=\"calc(100vh - 90px)\" spacing={4}>\n\t\t\t<Stepper size=\"sm\" index={activeStep}>\n\t\t\t\t{steps.map((step, index) => (\n\t\t\t\t\t<Step key={index}>\n\t\t\t\t\t\t<Stack align={\"center\"}>\n\t\t\t\t\t\t\t<StepIndicator>\n\t\t\t\t\t\t\t\t<StepStatus\n\t\t\t\t\t\t\t\t\tcomplete={<StepIcon />}\n\t\t\t\t\t\t\t\t\tincomplete={<StepNumber />}\n\t\t\t\t\t\t\t\t\tactive={<StepNumber />}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</StepIndicator>\n\n\t\t\t\t\t\t\t<Box textAlign={\"center\"} flexShrink=\"0\">\n\t\t\t\t\t\t\t\t<StepTitle>{step.description}</StepTitle>\n\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t</Stack>\n\n\t\t\t\t\t\t<StepSeparator />\n\t\t\t\t\t</Step>\n\t\t\t\t))}\n\t\t\t</Stepper>\n\n\t\t\t<Divider />\n\n\t\t\t<Stack spacing={0}>\n\t\t\t\t<Text\n\t\t\t\t\tcolor=\"whiteAlpha.600\"\n\t\t\t\t\tfontWeight=\"semibold\"\n\t\t\t\t\tletterSpacing=\"wide\"\n\t\t\t\t\tfontSize=\"xs\"\n\t\t\t\t\ttextTransform=\"uppercase\"\n\t\t\t\t>\n\t\t\t\t\tCourse Name:\n\t\t\t\t</Text>\n\t\t\t\t<Heading size=\"xl\">{data.title}</Heading>D\n\t\t\t</Stack>\n\n\t\t\t<Box>\n\t\t\t\t<Alert status=\"info\" borderRadius={\"lg\"}>\n\t\t\t\t\t<AlertIcon />\n\t\t\t\t\t<Text fontSize={{ base: \"sm\", md: \"md\" }}>\n\t\t\t\t\t\tWe generated chapters for each of your units. Look over them and\n\t\t\t\t\t\tthen click the \"Finish Course Generation\" button to confirm and\n\t\t\t\t\t\tcontinue.\n\t\t\t\t\t</Text>\n\t\t\t\t</Alert>\n\t\t\t</Box>\n\n\t\t\t{data.units.map((unit: any, i: number) => (\n\t\t\t\t<Stack key={i}>\n\t\t\t\t\t<Stack spacing={0}>\n\t\t\t\t\t\t<Text\n\t\t\t\t\t\t\tcolor=\"whiteAlpha.600\"\n\t\t\t\t\t\t\tfontWeight=\"semibold\"\n\t\t\t\t\t\t\tletterSpacing=\"wide\"\n\t\t\t\t\t\t\tfontSize=\"xs\"\n\t\t\t\t\t\t\ttextTransform=\"uppercase\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tUnit {i + 1}:\n\t\t\t\t\t\t</Text>\n\t\t\t\t\t\t<Heading size=\"md\">{unit.title}</Heading>\n\t\t\t\t\t</Stack>\n\t\t\t\t\t<Stack spacing={2}>\n\t\t\t\t\t\t{unit.chapters.map((chapter: any, j: number) => (\n\t\t\t\t\t\t\t<CreateCourseChapter\n\t\t\t\t\t\t\t\tkey={`${i}${j}`}\n\t\t\t\t\t\t\t\tchapterTitle={chapter.chapter_title}\n\t\t\t\t\t\t\t\tchapterNumber={j}\n\t\t\t\t\t\t\t\tsearchQuery={chapter.youtube_search_query}\n\t\t\t\t\t\t\t\tref={elementsRefs[i][j]}\n\t\t\t\t\t\t\t\tonError={() => {\n\t\t\t\t\t\t\t\t\tsetIsErrored(true);\n\t\t\t\t\t\t\t\t\tsetIsLoading((prev) =>\n\t\t\t\t\t\t\t\t\t\tprev.splice(prev.indexOf(`${i} ${j}`), 1)\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\tonComplete={(chapterInfo: any) => {\n\t\t\t\t\t\t\t\t\tconst newLoading = isLoading;\n\t\t\t\t\t\t\t\t\tif (newLoading.indexOf(`${i} ${j}`) !== -1) {\n\t\t\t\t\t\t\t\t\t\tnewLoading.splice(newLoading.indexOf(`${i} ${j}`), 1);\n\t\t\t\t\t\t\t\t\t\tsetIsLoading(newLoading);\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\tconst updatedData = finalData;\n\t\t\t\t\t\t\t\t\tupdatedData[i][j] = chapterInfo;\n\t\t\t\t\t\t\t\t\tsetFinalData(updatedData);\n\n\t\t\t\t\t\t\t\t\tif (isLoading.length == 0 && !allDone) {\n\t\t\t\t\t\t\t\t\t\tonComplete();\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</Stack>\n\t\t\t\t</Stack>\n\t\t\t))}\n\t\t\t{isErrored && (\n\t\t\t\t<Alert minH={100} status=\"error\" borderRadius={\"lg\"}>\n\t\t\t\t\t<AlertIcon />\n\t\t\t\t\t<Text fontSize={{ base: \"sm\", md: \"md\" }}>\n\t\t\t\t\t\tAn error occurred while creating one of your chapters. Click the\n\t\t\t\t\t\t\"Contact Us\" button to report the issue.\n\t\t\t\t\t</Text>\n\t\t\t\t</Alert>\n\t\t\t)}\n\n\t\t\t<Stack direction={\"row\"} pb={8} align=\"center\" spacing={4}>\n\t\t\t\t<Divider orientation=\"horizontal\" />\n\t\t\t\t<Box>\n\t\t\t\t\t<Button\n\t\t\t\t\t\tleftIcon={<FaChevronLeft />}\n\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\tnavigate(-1);\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\tBack\n\t\t\t\t\t</Button>\n\t\t\t\t</Box>\n\t\t\t\t<Box>\n\t\t\t\t\t<Button\n\t\t\t\t\t\trightIcon={\n\t\t\t\t\t\t\tisErrored ? (\n\t\t\t\t\t\t\t\t<FaEnvelope />\n\t\t\t\t\t\t\t) : allDone ? (\n\t\t\t\t\t\t\t\t<FaCheck />\n\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t<FaChevronRight />\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t}\n\t\t\t\t\t\tonClick={\n\t\t\t\t\t\t\tisErrored\n\t\t\t\t\t\t\t\t? () => navigate(\"/contact\")\n\t\t\t\t\t\t\t\t: allDone\n\t\t\t\t\t\t\t\t\t? saveAndFinish\n\t\t\t\t\t\t\t\t\t: generateChapterInfos\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcolorScheme={isErrored ? \"red\" : allDone ? \"green\" : \"blue\"}\n\t\t\t\t\t\tisLoading={isLoading.length > 0}\n\t\t\t\t\t\tloadingText={allDone ? \"Saving\" : \"Generating\"}\n\t\t\t\t\t>\n\t\t\t\t\t\t{isErrored ? \"Contact Us\" : allDone ? \"Save & Finish\" : \"Generate\"}\n\t\t\t\t\t</Button>\n\t\t\t\t</Box>\n\t\t\t\t<Divider orientation=\"horizontal\" />\n\t\t\t</Stack>\n\t\t</Stack>\n\t);\n}\n", "import { Icon, Spacer, Spinner, Stack, Text } from \"@chakra-ui/react\";\nimport { useFetcher } from \"@remix-run/react\";\nimport { forwardRef, useEffect, useImperativeHandle } from \"react\";\nimport { FaCheck, FaExclamation } from \"react-icons/fa6\";\n\ntype ChapterProps = {\n\tchapterNumber: number;\n\tchapterTitle: string;\n\tsearchQuery: string;\n\tonError: Function;\n\tonComplete: Function;\n\tref: any;\n};\n\nconst CreateCourseChapter = forwardRef(\n\t(\n\t\t{\n\t\t\tchapterNumber,\n\t\t\tchapterTitle,\n\t\t\tsearchQuery,\n\t\t\tonError,\n\t\t\tonComplete,\n\t\t}: ChapterProps,\n\t\tref\n\t) => {\n\t\tconst fetcher = useFetcher();\n\n\t\tuseImperativeHandle(ref, () => ({\n\t\t\ttriggerLoad() {\n\t\t\t\tconst formData = new FormData();\n\t\t\t\tformData.append(\"final_data\", \"false\");\n\t\t\t\tformData.append(\"chapter_title\", chapterTitle);\n\t\t\t\tformData.append(\"youtube_search_query\", searchQuery);\n\t\t\t\tfetcher.submit(formData, { method: \"post\" });\n\t\t\t},\n\t\t}));\n\n\t\tuseEffect(() => {\n\t\t\tif (fetcher.data) {\n\t\t\t\tif (fetcher.data.success == false) {\n\t\t\t\t\tonError();\n\t\t\t\t} else {\n\t\t\t\t\tonComplete(fetcher.data.chapterInfo);\n\t\t\t\t}\n\t\t\t}\n\t\t}, [fetcher]);\n\n\t\treturn (\n\t\t\t<Stack\n\t\t\t\tdirection={\"row\"}\n\t\t\t\tbg={\n\t\t\t\t\tfetcher.data\n\t\t\t\t\t\t? fetcher.data.success\n\t\t\t\t\t\t\t? \"green.800\"\n\t\t\t\t\t\t\t: \"red.800\"\n\t\t\t\t\t\t: \"whiteAlpha.300\"\n\t\t\t\t}\n\t\t\t\tborderRadius={\"lg\"}\n\t\t\t\tpy={2}\n\t\t\t\tpx={4}\n\t\t\t\talign=\"center\"\n\t\t\t>\n\t\t\t\t<Text fontWeight={\"bold\"}>\n\t\t\t\t\tChapter {chapterNumber + 1}: {chapterTitle}\n\t\t\t\t</Text>\n\t\t\t\t<Spacer />\n\t\t\t\t{fetcher.data ? (\n\t\t\t\t\tfetcher.data.success ? (\n\t\t\t\t\t\t<Icon boxSize={5} as={FaCheck} />\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<Icon boxSize={5} as={FaExclamation} />\n\t\t\t\t\t)\n\t\t\t\t) : (\n\t\t\t\t\t<Spinner\n\t\t\t\t\t\tboxSize={5}\n\t\t\t\t\t\tdisplay={fetcher.state == \"submitting\" ? \"block\" : \"none\"}\n\t\t\t\t\t/>\n\t\t\t\t)}\n\t\t\t</Stack>\n\t\t);\n\t}\n);\n\nexport default CreateCourseChapter;\n", "import Unit from \"../../src/components/Unit\";\nimport {\n\tBox,\n\tHeading,\n\tInput,\n\tStack,\n\tText,\n\tButton,\n\tDivider,\n\tAlert,\n\tAlertIcon,\n\tAlertTitle,\n\tAlertDescription,\n\tTextarea,\n} from \"@chakra-ui/react\";\nimport { Form, useActionData, useNavigation } from \"@remix-run/react\";\nimport { useEffect } from \"react\";\nimport { ActionArgs, json } from \"@remix-run/node\";\nimport { addDoc, collection } from \"firebase/firestore\";\nimport { db } from \"src/utils/firebase\";\n\nexport async function action({ request }: ActionArgs) {\n\ttry {\n\t\tconst formData = await request.formData();\n\n\t\tawait addDoc(collection(db, \"messages\"), {\n\t\t\temail: formData.get(\"email\") as string,\n\t\t\tsubject: formData.get(\"subject\") as string,\n\t\t\tmessage: formData.get(\"message\") as string,\n\t\t});\n\n\t\treturn json(\n\t\t\t{ message: \"Message sent!\" },\n\t\t\t{\n\t\t\t\tstatus: 200,\n\t\t\t}\n\t\t);\n\t} catch (error: unknown) {\n\t\tconsole.error(error);\n\t\treturn json(\n\t\t\t{\n\t\t\t\terror:\n\t\t\t\t\t\"Sorry, we couldn't send your message. Try emailing us at ping.mithil@gmail.com instead.\",\n\t\t\t},\n\t\t\t{\n\t\t\t\tstatus: 500,\n\t\t\t}\n\t\t);\n\t}\n}\n\nexport default function Home() {\n\tconst navigation = useNavigation();\n\tconst actionData = useActionData<any>();\n\n\treturn (\n\t\t<Form method=\"post\">\n\t\t\t<Stack maxW=\"xl\" justify=\"center\" margin={\"auto\"} p={8} spacing={4}>\n\t\t\t\t<Heading\n\t\t\t\t\tas=\"h1\"\n\t\t\t\t\tfontWeight={\"black\"}\n\t\t\t\t\tsize={{ base: \"3xl\", md: \"4xl\" }}\n\t\t\t\t\ttextAlign={\"center\"}\n\t\t\t\t>\n\t\t\t\t\tContact Us\n\t\t\t\t</Heading>\n\n\t\t\t\t<Alert status=\"info\" borderRadius={\"lg\"}>\n\t\t\t\t\t<AlertIcon />\n\t\t\t\t\t<Text fontSize={{ base: \"sm\", md: \"md\" }}>\n\t\t\t\t\t\tWe'll reply to your message as soon as possible!\n\t\t\t\t\t</Text>\n\t\t\t\t</Alert>\n\n\t\t\t\t<Stack spacing={{ base: 2, md: 4 }}>\n\t\t\t\t\t<Stack\n\t\t\t\t\t\tdirection={[\"column\", \"row\"]}\n\t\t\t\t\t\talign={{ base: \"start\", md: \"center\" }}\n\t\t\t\t\t\tjustify={\"space-between\"}\n\t\t\t\t\t\tspacing={{ base: 1, md: 0 }}\n\t\t\t\t\t>\n\t\t\t\t\t\t<Text fontWeight={\"bold\"} fontSize={{ base: \"lg\", md: \"xl\" }}>\n\t\t\t\t\t\t\tEmail:\n\t\t\t\t\t\t</Text>\n\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\tmaxW=\"sm\"\n\t\t\t\t\t\t\tdisabled={navigation.state === \"submitting\"}\n\t\t\t\t\t\t\tname=\"email\"\n\t\t\t\t\t\t\ttype=\"email\"\n\t\t\t\t\t\t\tisRequired\n\t\t\t\t\t\t\tsize=\"lg\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Stack>\n\t\t\t\t\t<Stack\n\t\t\t\t\t\tdirection={[\"column\", \"row\"]}\n\t\t\t\t\t\talign={{ base: \"start\", md: \"center\" }}\n\t\t\t\t\t\tjustify={\"space-between\"}\n\t\t\t\t\t\tspacing={{ base: 1, md: 0 }}\n\t\t\t\t\t>\n\t\t\t\t\t\t<Text fontWeight={\"bold\"} fontSize={{ base: \"lg\", md: \"xl\" }}>\n\t\t\t\t\t\t\tSubject:\n\t\t\t\t\t\t</Text>\n\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\tmaxW=\"sm\"\n\t\t\t\t\t\t\tdisabled={navigation.state === \"submitting\"}\n\t\t\t\t\t\t\tname=\"subject\"\n\t\t\t\t\t\t\tisRequired\n\t\t\t\t\t\t\tsize=\"lg\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Stack>\n\t\t\t\t\t<Stack\n\t\t\t\t\t\tdirection={[\"column\", \"row\"]}\n\t\t\t\t\t\talign={\"start\"}\n\t\t\t\t\t\tjustify={\"space-between\"}\n\t\t\t\t\t\tspacing={{ base: 1, md: 0 }}\n\t\t\t\t\t>\n\t\t\t\t\t\t<Text fontWeight={\"bold\"} fontSize={{ base: \"lg\", md: \"xl\" }}>\n\t\t\t\t\t\t\tMessage:\n\t\t\t\t\t\t</Text>\n\t\t\t\t\t\t<Textarea\n\t\t\t\t\t\t\tmaxW=\"sm\"\n\t\t\t\t\t\t\tdisabled={navigation.state === \"submitting\"}\n\t\t\t\t\t\t\tname=\"message\"\n\t\t\t\t\t\t\tisRequired\n\t\t\t\t\t\t\tsize=\"lg\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Stack>\n\t\t\t\t</Stack>\n\n\t\t\t\t<Stack spacing={4}>\n\t\t\t\t\t<Button\n\t\t\t\t\t\tcolorScheme=\"blue\"\n\t\t\t\t\t\tisLoading={navigation.state === \"submitting\"}\n\t\t\t\t\t\tloadingText={\"Sending...\"}\n\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t>\n\t\t\t\t\t\tSend!\n\t\t\t\t\t</Button>\n\n\t\t\t\t\t{actionData && (\n\t\t\t\t\t\t<Alert\n\t\t\t\t\t\t\tborderRadius={\"lg\"}\n\t\t\t\t\t\t\tstatus={actionData.error ? \"error\" : \"success\"}\n\t\t\t\t\t\t\tvariant=\"subtle\"\n\t\t\t\t\t\t\tflexDirection=\"column\"\n\t\t\t\t\t\t\talignItems=\"center\"\n\t\t\t\t\t\t\tjustifyContent=\"center\"\n\t\t\t\t\t\t\ttextAlign=\"center\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<AlertIcon boxSize=\"40px\" mr={0} />\n\t\t\t\t\t\t\t<AlertTitle mt={4} mb={1} fontSize=\"xl\">\n\t\t\t\t\t\t\t\t{actionData.error ? \"Something went wrong!\" : \"Success!\"}\n\t\t\t\t\t\t\t</AlertTitle>\n\t\t\t\t\t\t\t<AlertDescription maxWidth=\"sm\">\n\t\t\t\t\t\t\t\t{actionData.error\n\t\t\t\t\t\t\t\t\t? actionData.error\n\t\t\t\t\t\t\t\t\t: \"Your message was sent. We will respond to your message as soon as possible!\"}\n\t\t\t\t\t\t\t</AlertDescription>\n\t\t\t\t\t\t</Alert>\n\t\t\t\t\t)}\n\t\t\t\t</Stack>\n\t\t\t</Stack>\n\t\t</Form>\n\t);\n}\n", "import {\n\tStack,\n\tBox,\n\tDivider,\n\tInput,\n\tButton,\n\tHStack,\n\tWrap,\n\tInputRightElement,\n\tInputGroup,\n\tInputLeftElement,\n\tIcon,\n} from \"@chakra-ui/react\";\nimport { getAllCourses } from \"~/models/course.server\";\nimport { useLoaderData } from \"@remix-run/react\";\nimport { Form } from \"@remix-run/react\";\nimport GalleryResult from \"src/components/GalleryResult\";\nimport { FaSearch } from \"react-icons/fa\";\nimport { useState } from \"react\";\nimport Fuse from \"fuse.js\";\n\nexport const loader = async (query: string) => {\n\treturn await getAllCourses();\n};\n\nexport default function PostSlug() {\n\tconst coursesData = useLoaderData<typeof loader>();\n\n\tconst fuse = new Fuse(coursesData, {\n\t\tkeys: [\"id\", \"data.title\", \"data.units.title\"],\n\t\tthreshold: 0.4,\n\t});\n\n\tconst [data, setData] = useState(coursesData);\n\n\tfunction handleChange(e: any) {\n\t\tif (e.target.value == \"\") {\n\t\t\tsetData(coursesData);\n\t\t} else {\n\t\t\tsetData(fuse.search(e.target.value));\n\t\t}\n\t}\n\n\treturn (\n\t\t<Stack spacing={8} py={8} px={4}>\n\t\t\t<HStack spacing={2} px={4}>\n\t\t\t\t<InputGroup size=\"lg\">\n\t\t\t\t\t<InputLeftElement>\n\t\t\t\t\t\t<Icon as={FaSearch} />\n\t\t\t\t\t</InputLeftElement>\n\t\t\t\t\t<Input\n\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\tname=\"search\"\n\t\t\t\t\t\tpr=\"6rem\"\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tplaceholder=\"Search by keyword, title, or units\"\n\t\t\t\t\t/>\n\t\t\t\t</InputGroup>\n\t\t\t</HStack>\n\t\t\t<Divider\n\t\t\t\tborderColor=\"white.400\"\n\t\t\t\tborderWidth={\"1px\"}\n\t\t\t\tborderRadius=\"0.5px\"\n\t\t\t\tw=\"90%\"\n\t\t\t\talignSelf=\"center\"\n\t\t\t/>\n\t\t\t<Wrap spacing={4} justify={\"center\"}>\n\t\t\t\t{data.map((course: any, index: number) => (\n\t\t\t\t\t<GalleryResult\n\t\t\t\t\t\tcourseView={course.data ? course.data : course.item.data}\n\t\t\t\t\t\tcourseId={course.id ? course.id : course.item.id}\n\t\t\t\t\t\tkey={index}\n\t\t\t\t\t/>\n\t\t\t\t))}\n\t\t\t</Wrap>\n\t\t</Stack>\n\t);\n}\n", "import {\n\tImage,\n\tText,\n\tStack,\n\tBox,\n\tDivider,\n\tLink,\n\tWrapItem,\n\tLinkBox,\n\tLinkOverlay,\n\tHeading,\n\tCenter,\n\tSpinner,\n} from \"@chakra-ui/react\";\nimport { Link as RemixLink } from \"@remix-run/react\";\n\nfunction titleCase(st: string) {\n\treturn st\n\t\t.toLowerCase()\n\t\t.split(\" \")\n\t\t.reduce(\n\t\t\t(s, c) => s + \"\" + (c.charAt(0).toUpperCase() + c.slice(1) + \" \"),\n\t\t\t\"\"\n\t\t);\n}\n\ntype courseViewProps = {\n\tcourseView: any;\n\tcourseId: string;\n};\n\nexport default function GalleryResult({\n\tcourseView,\n\tcourseId,\n}: courseViewProps) {\n\treturn (\n\t\t<WrapItem>\n\t\t\t<LinkBox\n\t\t\t\tw=\"xs\"\n\t\t\t\tminH=\"sm\"\n\t\t\t\tborderWidth=\"1px\"\n\t\t\t\tborderRadius=\"lg\"\n\t\t\t\tboxShadow={\"lg\"}\n\t\t\t\tdisplay={\"flex\"}\n\t\t\t\tflexDirection={\"column\"}\n\t\t\t\toverflow={\"clip\"}\n\t\t\t>\n\t\t\t\t<Stack>\n\t\t\t\t\t<Image\n\t\t\t\t\t\tsrc={courseView.image}\n\t\t\t\t\t\tfit=\"cover\"\n\t\t\t\t\t\talt=\"Course Pic\"\n\t\t\t\t\t\th={200}\n\t\t\t\t\t\tfallback={\n\t\t\t\t\t\t\t<Center h={200}>\n\t\t\t\t\t\t\t\t<Spinner />\n\t\t\t\t\t\t\t</Center>\n\t\t\t\t\t\t}\n\t\t\t\t\t/>\n\t\t\t\t\t<Stack py={2} px={4}>\n\t\t\t\t\t\t<Heading size=\"md\">\n\t\t\t\t\t\t\t<LinkOverlay as={RemixLink} to={`/course/${courseId}/0/0`}>\n\t\t\t\t\t\t\t\t{courseView.title.charAt(0).toUpperCase() ===\n\t\t\t\t\t\t\t\tcourseView.title.charAt(0)\n\t\t\t\t\t\t\t\t\t? courseView.title\n\t\t\t\t\t\t\t\t\t: titleCase(courseView.title)}\n\t\t\t\t\t\t\t</LinkOverlay>\n\t\t\t\t\t\t</Heading>\n\t\t\t\t\t\t<Divider borderColor=\"gray.400\" />\n\n\t\t\t\t\t\t<Stack spacing={1}>\n\t\t\t\t\t\t\t<Box\n\t\t\t\t\t\t\t\tcolor=\"gray.500\"\n\t\t\t\t\t\t\t\tfontWeight=\"semibold\"\n\t\t\t\t\t\t\t\tletterSpacing=\"wide\"\n\t\t\t\t\t\t\t\tfontSize=\"xs\"\n\t\t\t\t\t\t\t\ttextTransform=\"uppercase\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tunits\n\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t\t{courseView.units.map((unit: any, i: number) => (\n\t\t\t\t\t\t\t\t<Link as={RemixLink} to={`/course/${courseId}/${i}/0`}>\n\t\t\t\t\t\t\t\t\t{unit.title}\n\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t</Stack>\n\t\t\t\t\t</Stack>\n\t\t\t\t</Stack>\n\t\t\t</LinkBox>\n\t\t</WrapItem>\n\t);\n}\n", "import Unit from \"../../src/components/Unit\";\nimport {\n\tBox,\n\tHeading,\n\tInput,\n\tStack,\n\tText,\n\tButton,\n\tDivider,\n\tAlert,\n\tAlertIcon,\n\tAlertTitle,\n\tAlertDescription,\n} from \"@chakra-ui/react\";\nimport { Form, useActionData, useNavigation } from \"@remix-run/react\";\nimport { useState } from \"react\";\nimport { FaPlus, FaTrash } from \"react-icons/fa6\";\nimport { ActionArgs, json, redirect } from \"@remix-run/node\";\nimport { createChapters } from \"~/models/course.server\";\nimport mixpanel from \"mixpanel-browser\";\n\nexport async function action({ request }: ActionArgs) {\n\ttry {\n\t\tconst formData = await request.formData();\n\t\tconst response = await createChapters(\n\t\t\tformData.get(\"title\") as string,\n\t\t\tformData.getAll(\"unit\") as string[]\n\t\t);\n\t\treturn redirect(`/create/${response.courseId}/`);\n\t} catch (error: unknown) {\n\t\tconsole.error(error);\n\t\treturn json(\n\t\t\t{ message: \"Sorry, we couldn't create the project\" },\n\t\t\t{\n\t\t\t\tstatus: 500,\n\t\t\t}\n\t\t);\n\t}\n}\n\nexport default function Home() {\n\tconst [units, setUnits] = useState([\"\", \"\", \"\"]);\n\tconst [title, setTitle] = useState(\"\");\n\n\tconst navigation = useNavigation();\n\tconst actionData = useActionData<typeof action>();\n\n\treturn (\n\t\t<Form\n\t\t\tonSubmit={() => {\n\t\t\t\tmixpanel.track(\"Submit Create Course Form\", {\n\t\t\t\t\ttitle: title,\n\t\t\t\t});\n\t\t\t}}\n\t\t\tmethod=\"post\"\n\t\t\taction=\"/?index\"\n\t\t>\n\t\t\t<Stack maxW=\"xl\" justify=\"center\" margin={\"auto\"} p={8} spacing={4}>\n\t\t\t\t<Heading\n\t\t\t\t\tas=\"h1\"\n\t\t\t\t\tfontWeight={\"black\"}\n\t\t\t\t\tsize={{ base: \"xl\", md: \"2xl\" }}\n\t\t\t\t\ttextAlign={\"center\"}\n\t\t\t\t>\n\t\t\t\t\tCreate a Course\n\t\t\t\t</Heading>\n\n\t\t\t\t<Alert status=\"info\" borderRadius={\"lg\"}>\n\t\t\t\t\t<AlertIcon />\n\t\t\t\t\t<Text fontSize={{ base: \"sm\", md: \"md\" }}>\n\t\t\t\t\t\tEnter in a course title, or what you want to learn about. Then enter\n\t\t\t\t\t\ta list of units, which are the specifics you want to learn. Hit\n\t\t\t\t\t\t\"Let's Go\" and our AI will generate a course for you!\n\t\t\t\t\t</Text>\n\t\t\t\t</Alert>\n\n\t\t\t\t<Stack spacing={{ base: 2, md: 4 }}>\n\t\t\t\t\t<Stack\n\t\t\t\t\t\tdirection={[\"column\", \"row\"]}\n\t\t\t\t\t\talign={{ base: \"start\", md: \"center\" }}\n\t\t\t\t\t\tjustify={\"space-between\"}\n\t\t\t\t\t\tspacing={{ base: 1, md: 0 }}\n\t\t\t\t\t>\n\t\t\t\t\t\t<Text fontWeight={\"bold\"} fontSize={{ base: \"lg\", md: \"xl\" }}>\n\t\t\t\t\t\t\tTitle:\n\t\t\t\t\t\t</Text>\n\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\tmaxW=\"sm\"\n\t\t\t\t\t\t\tdisabled={navigation.state === \"submitting\"}\n\t\t\t\t\t\t\tname=\"title\"\n\t\t\t\t\t\t\tisRequired\n\t\t\t\t\t\t\tsize=\"lg\"\n\t\t\t\t\t\t\tplaceholder=\"History of WWII\"\n\t\t\t\t\t\t\tonChange={(e) => setTitle(e.target.value)}\n\t\t\t\t\t\t\tvalue={title}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Stack>\n\t\t\t\t\t{units.map((u, index) => (\n\t\t\t\t\t\t<Unit\n\t\t\t\t\t\t\tkey={index}\n\t\t\t\t\t\t\tindex={index}\n\t\t\t\t\t\t\tdisabled={navigation.state === \"submitting\"}\n\t\t\t\t\t\t\tonChange={(e) => {\n\t\t\t\t\t\t\t\tconst newUnits = [...units];\n\t\t\t\t\t\t\t\tnewUnits[index] = e;\n\t\t\t\t\t\t\t\tsetUnits(newUnits);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t))}\n\t\t\t\t</Stack>\n\n\t\t\t\t<Stack direction={\"row\"} align=\"center\" spacing={4}>\n\t\t\t\t\t<Divider orientation=\"horizontal\" />\n\t\t\t\t\t<Box>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tleftIcon={<FaPlus />}\n\t\t\t\t\t\t\tonClick={() =>\n\t\t\t\t\t\t\t\tsetUnits((units) => {\n\t\t\t\t\t\t\t\t\tconst newUnits = [...units];\n\t\t\t\t\t\t\t\t\tnewUnits.push(\"\");\n\t\t\t\t\t\t\t\t\treturn newUnits;\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tAdd Unit\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</Box>\n\t\t\t\t\t<Box>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tleftIcon={<FaTrash />}\n\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\tconst newUnits = [...units];\n\t\t\t\t\t\t\t\tnewUnits.pop();\n\t\t\t\t\t\t\t\tsetUnits(newUnits);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tDelete Unit\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</Box>\n\t\t\t\t\t<Divider orientation=\"horizontal\" />\n\t\t\t\t</Stack>\n\n\t\t\t\t<Stack spacing={4}>\n\t\t\t\t\t<Button\n\t\t\t\t\t\tcolorScheme=\"blue\"\n\t\t\t\t\t\tisLoading={navigation.state === \"submitting\"}\n\t\t\t\t\t\tloadingText={\"Creating Your Course...\"}\n\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t>\n\t\t\t\t\t\tLet's Go!\n\t\t\t\t\t</Button>\n\n\t\t\t\t\t{actionData?.message && (\n\t\t\t\t\t\t<Alert status=\"error\">\n\t\t\t\t\t\t\t<AlertIcon />\n\t\t\t\t\t\t\t<AlertTitle>Something went wrong!</AlertTitle>\n\t\t\t\t\t\t\t<AlertDescription>Error: {actionData.message}</AlertDescription>\n\t\t\t\t\t\t</Alert>\n\t\t\t\t\t)}\n\t\t\t\t</Stack>\n\t\t\t</Stack>\n\t\t</Form>\n\t);\n}\n", "import { Input, Stack, Text } from \"@chakra-ui/react\";\nimport { useState } from \"react\";\n\ntype UnitProps = {\n\tindex: number;\n\tonChange: (value: string) => void;\n\tdisabled: boolean;\n};\n\nexport default function Unit({ index, onChange, disabled }: UnitProps) {\n\tconst [value, setValue] = useState(\"\");\n\n\treturn (\n\t\t<Stack\n\t\t\tdirection={[\"column\", \"row\"]}\n\t\t\talign={{ base: \"start\", md: \"center\" }}\n\t\t\tjustify={\"space-between\"}\n\t\t\tspacing={{ base: 1, md: 0 }}\n\t\t>\n\t\t\t<Text fontSize={{ base: \"lg\", md: \"xl\" }} fontWeight={\"bold\"}>\n\t\t\t\tUnit {index + 1}:\n\t\t\t</Text>\n\t\t\t<Input\n\t\t\t\tmaxW=\"sm\"\n\t\t\t\tdisabled={disabled}\n\t\t\t\tisRequired\n\t\t\t\tname={\"unit\"}\n\t\t\t\tsize=\"lg\"\n\t\t\t\tplaceholder={\n\t\t\t\t\tindex == 0\n\t\t\t\t\t\t? \"Axis Powers\"\n\t\t\t\t\t\t: index == 1\n\t\t\t\t\t\t? \"Allied Powers\"\n\t\t\t\t\t\t: index == 2\n\t\t\t\t\t\t? \"Major Battles\"\n\t\t\t\t\t\t: \"Unit Title\"\n\t\t\t\t}\n\t\t\t\tvalue={value}\n\t\t\t\tonChange={(e) => {\n\t\t\t\t\tsetValue(e.target.value);\n\t\t\t\t\tonChange(e.target.value);\n\t\t\t\t}}\n\t\t\t/>\n\t\t</Stack>\n\t);\n}\n", "export default {'version':'3f437418','entry':{'module':'/build/entry.client-2HN2Y4KR.js','imports':['/build/_shared/chunk-DGTLSPJW.js','/build/_shared/chunk-KQ632LOB.js']},'routes':{'root':{'id':'root','parentId':undefined,'path':'','index':undefined,'caseSensitive':undefined,'module':'/build/root-IE6UCAQG.js','imports':['/build/_shared/chunk-LENQ6WN7.js'],'hasAction':false,'hasLoader':false,'hasCatchBoundary':true,'hasErrorBoundary':true},'routes/contact':{'id':'routes/contact','parentId':'root','path':'contact','index':undefined,'caseSensitive':undefined,'module':'/build/routes/contact-5WNO4XL6.js','imports':['/build/_shared/chunk-WWDZYVVF.js','/build/_shared/chunk-OHKIDMYG.js'],'hasAction':true,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/course.$courseId':{'id':'routes/course.$courseId','parentId':'root','path':'course/:courseId','index':undefined,'caseSensitive':undefined,'module':'/build/routes/course.$courseId-T3LQ3JOG.js','imports':['/build/_shared/chunk-PGTZQGSQ.js','/build/_shared/chunk-UKK3ANHQ.js','/build/_shared/chunk-HTU5OTNK.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/course.$courseId.$unitId':{'id':'routes/course.$courseId.$unitId','parentId':'root','path':'course/:courseId/:unitId','index':undefined,'caseSensitive':undefined,'module':'/build/routes/course.$courseId.$unitId-SFWWKSEG.js','imports':['/build/_shared/chunk-PGTZQGSQ.js','/build/_shared/chunk-UKK3ANHQ.js','/build/_shared/chunk-HTU5OTNK.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/course.$courseId.$unitId.$chapterId':{'id':'routes/course.$courseId.$unitId.$chapterId','parentId':'root','path':'course/:courseId/:unitId/:chapterId','index':undefined,'caseSensitive':undefined,'module':'/build/routes/course.$courseId.$unitId.$chapterId-H3B5ZL2W.js','imports':['/build/_shared/chunk-PGTZQGSQ.js','/build/_shared/chunk-UKK3ANHQ.js','/build/_shared/chunk-OHKIDMYG.js','/build/_shared/chunk-HTU5OTNK.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/create.$courseId':{'id':'routes/create.$courseId','parentId':'root','path':'create/:courseId','index':undefined,'caseSensitive':undefined,'module':'/build/routes/create.$courseId-ZKVFZFAM.js','imports':['/build/_shared/chunk-UKK3ANHQ.js','/build/_shared/chunk-WWDZYVVF.js','/build/_shared/chunk-OHKIDMYG.js','/build/_shared/chunk-HTU5OTNK.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/gallery':{'id':'routes/gallery','parentId':'root','path':'gallery','index':undefined,'caseSensitive':undefined,'module':'/build/routes/gallery-W4TWLIJW.js','imports':['/build/_shared/chunk-HTU5OTNK.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/index':{'id':'routes/index','parentId':'root','path':undefined,'index':true,'caseSensitive':undefined,'module':'/build/routes/index-BRDFJICC.js','imports':['/build/_shared/chunk-UKK3ANHQ.js','/build/_shared/chunk-HTU5OTNK.js'],'hasAction':true,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false}},'cssBundleHref':undefined,'hmr':undefined,'url':'/build/manifest-3F437418.js'};", "\nimport * as entryServer from \"/Users/anavbo/Desktop/Personal/coursify/app/entry.server.tsx\";\nimport * as route0 from \"./root.tsx\";\nimport * as route1 from \"./routes/course.$courseId.$unitId.$chapterId.tsx\";\nimport * as route2 from \"./routes/course.$courseId.$unitId.tsx\";\nimport * as route3 from \"./routes/course.$courseId.tsx\";\nimport * as route4 from \"./routes/create.$courseId.tsx\";\nimport * as route5 from \"./routes/contact.tsx\";\nimport * as route6 from \"./routes/gallery.tsx\";\nimport * as route7 from \"./routes/index.tsx\";\n  export { default as assets } from \"@remix-run/dev/assets-manifest\";\n  export const assetsBuildDirectory = \"public/build\";\n  export const future = {\"unstable_cssModules\":false,\"unstable_cssSideEffectImports\":false,\"unstable_dev\":false,\"unstable_postcss\":false,\"unstable_tailwind\":false,\"unstable_vanillaExtract\":false,\"v2_errorBoundary\":false,\"v2_meta\":false,\"v2_routeConvention\":false};\n  export const publicPath = \"/build/\";\n  export const entry = { module: entryServer };\n  \n  export const routes = {\n    \"root\": {\n      id: \"root\",\n      parentId: undefined,\n      path: \"\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route0\n    },\n  \"routes/course.$courseId.$unitId.$chapterId\": {\n      id: \"routes/course.$courseId.$unitId.$chapterId\",\n      parentId: \"root\",\n      path: \"course/:courseId/:unitId/:chapterId\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route1\n    },\n  \"routes/course.$courseId.$unitId\": {\n      id: \"routes/course.$courseId.$unitId\",\n      parentId: \"root\",\n      path: \"course/:courseId/:unitId\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route2\n    },\n  \"routes/course.$courseId\": {\n      id: \"routes/course.$courseId\",\n      parentId: \"root\",\n      path: \"course/:courseId\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route3\n    },\n  \"routes/create.$courseId\": {\n      id: \"routes/create.$courseId\",\n      parentId: \"root\",\n      path: \"create/:courseId\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route4\n    },\n  \"routes/contact\": {\n      id: \"routes/contact\",\n      parentId: \"root\",\n      path: \"contact\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route5\n    },\n  \"routes/gallery\": {\n      id: \"routes/gallery\",\n      parentId: \"root\",\n      path: \"gallery\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route6\n    },\n  \"routes/index\": {\n      id: \"routes/index\",\n      parentId: \"root\",\n      path: undefined,\n      index: true,\n      caseSensitive: undefined,\n      module: route7\n    }\n  };"],
  "mappings": "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",
  "names": ["import_react", "isbot", "createEmotionCache", "EmotionCacheProvider", "createEmotionServer", "import_react", "import_react", "import_react", "import_react", "import_jsx_dev_runtime", "NProgress", "RemixLink", "import_node", "import_react", "import_firestore", "doc", "document", "json", "import_react", "import_react", "import_jsx_dev_runtime", "import_fa6", "import_react", "import_jsx_dev_runtime", "RemixLink", "import_react", "import_firestore", "import_jsx_dev_runtime", "percentCorrect", "PostSlug", "loader", "import_node", "import_react", "import_react", "import_jsx_dev_runtime", "loader", "PostSlug", "PostSlug", "loader", "import_node", "import_react", "import_react", "import_jsx_dev_runtime", "loader", "PostSlug", "action", "loader", "import_react", "import_node", "import_firestore", "import_fa6", "import_react", "import_fa6", "import_jsx_dev_runtime", "import_jsx_dev_runtime", "loader", "action", "mixpanel", "action", "import_react", "import_node", "import_firestore", "import_jsx_dev_runtime", "action", "PostSlug", "loader", "import_react", "import_react", "import_react", "import_jsx_dev_runtime", "RemixLink", "import_react", "import_jsx_dev_runtime", "loader", "query", "PostSlug", "Fuse", "action", "Home", "import_react", "import_jsx_dev_runtime", "import_react", "import_fa6", "import_node", "import_mixpanel_browser", "import_jsx_dev_runtime", "action", "Home", "mixpanel", "units"]
}
